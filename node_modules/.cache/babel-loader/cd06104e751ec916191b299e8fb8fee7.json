{"ast":null,"code":"import axios from 'axios';\nimport { config } from '../config';\nexport default {\n  BannerList: () => {\n    console.log(\"msg\");\n    return axios.get(config.baseApiUrl + \"api/list/banner-list\").then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  ProductList: () => {\n    console.log(\"msg\");\n    return axios.get(config.baseApiUrl + \"api/product-store/featureproduct-list\").then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  Signup: obj => {\n    return axios.post(config.baseApiUrl + \"api/customer/register\", obj).then(response => {\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  Login: obj => {\n    return axios.post(config.baseApiUrl + \"api/customer/login\", obj).then(response => {\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  CategoryList: () => {\n    return axios.get(config.baseApiUrl + \"api/list/category-list\").then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  SubCategoryList: data => {\n    return axios.get(config.baseApiUrl + \"api/list/productlist\", {\n      params: {\n        categoryId: data\n      }\n    }).then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  productDetail: id => {\n    return axios.get(config.baseApiUrl + \"api/product-store/productdetail/\" + id).then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  addwishlist: id => {\n    const Token = localStorage.getItem('token');\n    const headers = {\n      'content-type': 'application/json',\n      'Authorization': 'JWT fefege...',\n      'token': Token\n    };\n    return axios.post(config.baseApiUrl + 'api/customer/add-product-to-wishlist', id, {\n      headers: headers\n    }).then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n};","map":{"version":3,"sources":["/var/www/html/ecommerce-app/src/service/homeservice.js"],"names":["axios","config","BannerList","console","log","get","baseApiUrl","then","response","catch","status","message","ProductList","Signup","obj","post","Login","CategoryList","SubCategoryList","data","params","categoryId","productDetail","id","addwishlist","Token","localStorage","getItem","headers"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { config } from '../config';\n\nexport default {\n    BannerList: () => {\n        console.log(\"msg\");\n        return axios.get(config.baseApiUrl + \"api/list/banner-list\")\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    ProductList: () => {\n        console.log(\"msg\");\n        return axios.get(config.baseApiUrl + \"api/product-store/featureproduct-list\")\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    Signup: (obj) => {\n        return axios.post(config.baseApiUrl + \"api/customer/register\", obj)\n            .then(response => {\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    Login: (obj) => {\n        return axios.post(config.baseApiUrl + \"api/customer/login\", obj)\n            .then(response => {\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    CategoryList: () => {\n        return axios.get(config.baseApiUrl + \"api/list/category-list\")\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    SubCategoryList: (data) => {\n        return axios.get(config.baseApiUrl + \"api/list/productlist\", {\n            params: {\n                categoryId: data\n            }\n        })\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    productDetail: (id) => {\n        return axios.get(config.baseApiUrl + \"api/product-store/productdetail/\"+id)\n        .then(response => {\n            console.log(\"response===\", response);\n            return response;\n        }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    addwishlist:(id) => {\n        const Token = localStorage.getItem('token');\n        const headers = {\n            'content-type': 'application/json',\n            'Authorization': 'JWT fefege...',\n            'token': Token\n        }\n        return axios.post(config.baseApiUrl + 'api/customer/add-product-to-wishlist', id, { headers: headers })\n        .then(response => {\n            console.log(\"response===\", response);\n            return response;\n        }).catch({ status: 500, message: 'Internal Server Error' });\n    }\n\n    \n}"]},"metadata":{},"sourceType":"module"}