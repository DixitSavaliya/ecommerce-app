{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ecommerce-app/src/Component/checkout/checkout.js\";\nimport React from 'react';\nimport API from '../../service/homeservice';\nimport './checkout.css';\n\nclass Checkout extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let firstNameError = '';\n      let lastNameError = '';\n      let emailError = '';\n      let mobileNumberError = '';\n      let address_1Error = '';\n      let cityError = '';\n      let zoneError = '';\n      let pincodeError = '';\n      let countryError = '';\n\n      if (!this.state.firstName) {\n        firstNameError = \"please enter firstName name\";\n      }\n\n      if (!this.state.lastName) {\n        lastNameError = \"please enter lastNameError name\";\n      }\n\n      const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      if (!reg.test(this.state.email)) {\n        emailError = \"invalid email\";\n      }\n\n      if (!this.state.mobileNumber) {\n        mobileNumberError = \"please enter phone number\";\n      }\n\n      if (!this.state.address_1) {\n        address_1Error = \"please enter phone number\";\n      }\n\n      if (!this.state.city) {\n        cityError = \"please enter  city\";\n      }\n\n      if (!this.state.pincode) {\n        pincodeError = \"please enter pincode\";\n      }\n\n      if (!this.state.zone) {\n        zoneError = \"please enter state\";\n      }\n\n      if (!this.state.country) {\n        countryError = \"please enter country\";\n      }\n\n      if (nameError || emailIdError || passwordError || confirmPasswordError || phoneNumberError) {\n        this.setState({\n          nameError,\n          emailIdError,\n          confirmPasswordError,\n          phoneNumberError,\n          passwordError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.state = {\n      getProfileList: [],\n      countryList: [],\n      zoneList: [],\n      firstName: '',\n      firstNameError: '',\n      lastName: '',\n      lastNameError: '',\n      email: '',\n      emailError: '',\n      mobileNumber: '',\n      mobileNumberError: '',\n      address_1: '',\n      address_1Error: '',\n      address_2: '',\n      city: '',\n      cityError: '',\n      zone: '',\n      zoneError: '',\n      pincode: '',\n      pincodeError: '',\n      country: '',\n      countryError: ''\n    };\n    this.productDetails = this.props.location.state.name;\n    console.log(\"data\", this.productDetails);\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeCountry = this.handleChangeCountry.bind(this);\n    this.Checkout = this.Checkout.bind(this);\n  }\n\n  componentDidMount() {\n    API.getCountryList().then(findresponse => {\n      // console.log(\"getCountryList response===\", findresponse);\n      this.setState({\n        countryList: findresponse.data.data\n      });\n      console.log(\"countryList==\", this.state.countryList);\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n    API.getZoneList().then(findresponse => {\n      console.log(\"getZoneList response===\", findresponse);\n      this.setState({\n        zoneList: findresponse.data.data\n      });\n      console.log(\"data==\", this.state.zoneList);\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n    API.getProfile().then(findresponse => {\n      // console.log(\"getProfile response===\", findresponse);\n      this.setState({\n        getProfileList: findresponse.data.data\n      });\n      console.log(\"data==\", this.state.getProfileList);\n      this.setState({\n        firstName: this.state.getProfileList.firstName,\n        email: this.state.getProfileList.email,\n        mobileNumber: this.state.getProfileList.mobileNumber\n      });\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n\n  handleChangeName(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      zone: event.target.value\n    });\n  }\n\n  handleChangeCountry(event) {\n    this.setState({\n      country: event.target.value\n    });\n  }\n\n  Checkout() {\n    const obj = {\n      productDetails: this.productDetails,\n      shippingFirstName: this.state.firstName,\n      emailId: this.state.email,\n      phoneNumber: this.state.mobileNumber,\n      shippingLastName: this.state.lastName,\n      shippingAddress_1: this.state.address_1,\n      shippingAddress_2: this.state.address_2,\n      shippingCity: this.state.city,\n      shippingZone: this.state.zone,\n      shippingPostCode: this.state.pincode,\n      shippingCountry: this.state.country\n    };\n    API.checkoutListOrder(obj).then(findresponse => {\n      console.log(\"checkoutListOrder response===\", findresponse);\n      window.location.href = '/home';\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"First name:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"firstName\",\n      value: this.state.firstName,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), \"Last name:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"lastName\",\n      value: this.state.lastName,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), \"Address_1:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      rows: \"4\",\n      cols: \"50\",\n      name: \"address_1\",\n      value: this.state.address_1,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), \"Address_2:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      rows: \"4\",\n      cols: \"50\",\n      name: \"address_2\",\n      value: this.state.address_2,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), \"Country:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"shippingCountry\",\n      onChange: this.handleChangeCountry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, this.state.countryList.map((e, key) => {\n      return React.createElement(\"option\", {\n        key: key,\n        value: e.countryId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, e.name);\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), \"Phone Number:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"phoneNumber\",\n      value: this.state.mobileNumber,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), \"Email:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"emailId\",\n      value: this.state.email,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), \"City:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"city\",\n      value: this.state.city,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), \"Zone:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"shippingZone\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, this.state.zoneList.map((e, key) => {\n      return React.createElement(\"option\", {\n        key: key,\n        value: e.zoneId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, e.name);\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), \"PinCode:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"pincode\",\n      value: this.state.pincode,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.Checkout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default Checkout;","map":{"version":3,"sources":["/var/www/html/ecommerce-app/src/Component/checkout/checkout.js"],"names":["React","API","Checkout","Component","constructor","props","validate","firstNameError","lastNameError","emailError","mobileNumberError","address_1Error","cityError","zoneError","pincodeError","countryError","state","firstName","lastName","reg","test","email","mobileNumber","address_1","city","pincode","zone","country","nameError","emailIdError","passwordError","confirmPasswordError","phoneNumberError","setState","getProfileList","countryList","zoneList","address_2","productDetails","location","name","console","log","handleChangeName","bind","handleChange","handleChangeCountry","componentDidMount","getCountryList","then","findresponse","data","catch","status","message","getZoneList","getProfile","event","target","value","obj","shippingFirstName","emailId","phoneNumber","shippingLastName","shippingAddress_1","shippingAddress_2","shippingCity","shippingZone","shippingPostCode","shippingCountry","checkoutListOrder","window","href","render","map","e","key","countryId","zoneId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport API from '../../service/homeservice';\nimport './checkout.css';\n\nclass Checkout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            getProfileList: [],\n            countryList: [],\n            zoneList: [],\n            firstName: '',\n            firstNameError: '',\n            lastName: '',\n            lastNameError: '',\n            email: '',\n            emailError: '',\n            mobileNumber: '',\n            mobileNumberError: '',\n            address_1: '',\n            address_1Error: '',\n            address_2: '',\n            city: '',\n            cityError: '',\n            zone: '',\n            zoneError: '',\n            pincode: '',\n            pincodeError: '',\n            country: '',\n            countryError: ''\n\n        }\n        this.productDetails = this.props.location.state.name;\n        console.log(\"data\", this.productDetails);\n        this.handleChangeName = this.handleChangeName.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeCountry = this.handleChangeCountry.bind(this);\n        this.Checkout = this.Checkout.bind(this);\n    }\n\n    componentDidMount() {\n\n        API.getCountryList().\n            then((findresponse) => {\n                // console.log(\"getCountryList response===\", findresponse);\n                this.setState({ countryList: findresponse.data.data })\n                console.log(\"countryList==\", this.state.countryList);\n\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n\n\n        API.getZoneList().\n            then((findresponse) => {\n                console.log(\"getZoneList response===\", findresponse);\n                this.setState({ zoneList: findresponse.data.data })\n                console.log(\"data==\", this.state.zoneList);\n\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n\n        API.getProfile().\n            then((findresponse) => {\n                // console.log(\"getProfile response===\", findresponse);\n                this.setState({ getProfileList: findresponse.data.data })\n                console.log(\"data==\", this.state.getProfileList);\n                this.setState({\n                    firstName: this.state.getProfileList.firstName,\n                    email: this.state.getProfileList.email,\n                    mobileNumber: this.state.getProfileList.mobileNumber\n                });\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n    }\n\n    validate = () => {\n        let firstNameError = '';\n        let lastNameError = '';\n        let emailError = '';\n        let mobileNumberError = '';\n        let address_1Error = '';\n        let cityError = '';\n        let zoneError = '';\n        let pincodeError = '';\n        let countryError = '';\n\n        if (!this.state.firstName) {\n            firstNameError = \"please enter firstName name\";\n        }\n\n        if (!this.state.lastName) {\n            lastNameError = \"please enter lastNameError name\";\n        }\n\n        const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        if (!reg.test(this.state.email)) {\n            emailError = \"invalid email\";\n        }\n\n        if (!this.state.mobileNumber) {\n            mobileNumberError = \"please enter phone number\";\n        }\n\n        if (!this.state.address_1) {\n            address_1Error = \"please enter phone number\";\n        }\n\n        if (!this.state.city) {\n            cityError = \"please enter  city\";\n        }\n\n        if (!this.state.pincode) {\n            pincodeError = \"please enter pincode\";\n        }\n\n        if (!this.state.zone) {\n            zoneError = \"please enter state\";\n        }\n\n        if (!this.state.country) {\n            countryError = \"please enter country\";\n        }\n\n\n        if (nameError || emailIdError || passwordError || confirmPasswordError || phoneNumberError) {\n            this.setState({ nameError, emailIdError, confirmPasswordError, phoneNumberError, passwordError });\n            return false;\n        }\n        return true;\n    };\n\n    handleChangeName(event) {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleChange(event) {\n        this.setState({ zone: event.target.value })\n    }\n\n    handleChangeCountry(event) {\n        this.setState({ country: event.target.value })\n    }\n\n    Checkout() {\n        const obj = {\n            productDetails: this.productDetails,\n            shippingFirstName: this.state.firstName,\n            emailId: this.state.email,\n            phoneNumber: this.state.mobileNumber,\n            shippingLastName: this.state.lastName,\n            shippingAddress_1: this.state.address_1,\n            shippingAddress_2: this.state.address_2,\n            shippingCity: this.state.city,\n            shippingZone: this.state.zone,\n            shippingPostCode: this.state.pincode,\n            shippingCountry: this.state.country\n\n        }\n\n        API.checkoutListOrder(obj).\n            then((findresponse) => {\n                console.log(\"checkoutListOrder response===\", findresponse);\n                window.location.href = '/home';\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n    }\n\n    render() {\n        return (\n            <div>\n                <form className=\"center\">\n                    First name:<br />\n                    <input type=\"text\" name=\"firstName\" value={this.state.firstName}\n                        onChange={this.handleChangeName} />\n                    <br />\n                    Last name:<br />\n                    <input type=\"text\" name=\"lastName\" value={this.state.lastName}\n                        onChange={this.handleChangeName} />\n                    <br />\n                    Address_1:<br />\n                    <textarea rows=\"4\" cols=\"50\" name=\"address_1\" value={this.state.address_1} onChange={this.handleChangeName}>\n\n                    </textarea>\n                    <br />\n                    Address_2:<br />\n                    <textarea rows=\"4\" cols=\"50\" name=\"address_2\" value={this.state.address_2} onChange={this.handleChangeName}>\n\n                    </textarea>\n                    <br />\n                    Country:<br />\n                    <select name=\"shippingCountry\" onChange={this.handleChangeCountry}>\n                        {this.state.countryList.map((e, key) => {\n                            return <option key={key} value={e.countryId}>{e.name}</option>;\n                        })}\n                    </select>\n                    <br />\n                    Phone Number:<br />\n                    <input type=\"text\" name=\"phoneNumber\" value={this.state.mobileNumber}\n                        onChange={this.handleChangeName} />\n                    <br />\n                    Email:<br />\n                    <input type=\"text\" name=\"emailId\" value={this.state.email}\n                        onChange={this.handleChangeName} />\n                    <br />\n                    City:<br />\n                    <input type=\"text\" name=\"city\" value={this.state.city}\n                        onChange={this.handleChangeName} />\n                    <br />\n                    Zone:<br />\n                    <select name=\"shippingZone\" onChange={this.handleChange}>\n                        {this.state.zoneList.map((e, key) => {\n                            return <option key={key} value={e.zoneId}>{e.name}</option>;\n                        })}\n                    </select>\n                    <br />\n                    PinCode:<br />\n                    <input type=\"text\" name=\"pincode\" value={this.state.pincode}\n                        onChange={this.handleChangeName} />\n                    <br />\n                    <button type=\"button\" onClick={this.Checkout} >Submit</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}