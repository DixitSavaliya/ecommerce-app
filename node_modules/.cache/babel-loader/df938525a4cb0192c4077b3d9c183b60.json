{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ecommerce-app/src/Component/checkout/checkout.js\";\nimport React from 'react';\nimport API from '../../service/homeservice';\nimport './checkout.css';\n\nclass Checkout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      getProfileList: [],\n      countryList: [],\n      zoneList: [],\n      firstName: '',\n      firstNameError: '',\n      lastName: '',\n      lastNameError: '',\n      email: '',\n      emailError: '',\n      mobileNumber: '',\n      mobileNumberError: '',\n      address_1: '',\n      address_1Error: '',\n      address_2: '',\n      city: '',\n      cityError: '',\n      zone: '',\n      zoneError: '',\n      pincode: '',\n      pincodeError: '',\n      country: '',\n      countryError: ''\n    };\n    this.productDetails = this.props.location.state.name;\n    console.log(\"data\", this.productDetails);\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeCountry = this.handleChangeCountry.bind(this);\n    this.Checkout = this.Checkout.bind(this);\n  }\n\n  componentDidMount() {\n    API.getCountryList().then(findresponse => {\n      // console.log(\"getCountryList response===\", findresponse);\n      this.setState({\n        countryList: findresponse.data.data\n      });\n      console.log(\"countryList==\", this.state.countryList);\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n    API.getZoneList().then(findresponse => {\n      console.log(\"getZoneList response===\", findresponse);\n      this.setState({\n        zoneList: findresponse.data.data\n      });\n      console.log(\"data==\", this.state.zoneList);\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n    API.getProfile().then(findresponse => {\n      // console.log(\"getProfile response===\", findresponse);\n      this.setState({\n        getProfileList: findresponse.data.data\n      });\n      console.log(\"data==\", this.state.getProfileList);\n      this.setState({\n        firstName: this.state.getProfileList.firstName,\n        email: this.state.getProfileList.email,\n        mobileNumber: this.state.getProfileList.mobileNumber\n      });\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n\n  handleChangeName(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      zone: event.target.value\n    });\n  }\n\n  handleChangeCountry(event) {\n    this.setState({\n      country: event.target.value\n    });\n  }\n\n  Checkout() {\n    const obj = {\n      productDetails: this.productDetails,\n      shippingFirstName: this.state.firstName,\n      emailId: this.state.email,\n      phoneNumber: this.state.mobileNumber,\n      shippingLastName: this.state.lastName,\n      shippingAddress_1: this.state.address_1,\n      shippingAddress_2: this.state.address_2,\n      shippingCity: this.state.city,\n      shippingZone: this.state.zone,\n      shippingPostCode: this.state.pincode,\n      shippingCountry: this.state.country\n    };\n    API.checkoutListOrder(obj).then(findresponse => {\n      console.log(\"checkoutListOrder response===\", findresponse);\n      window.location.href = '/home';\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"First name:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"firstName\",\n      value: this.state.firstName,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), \"Last name:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"lastName\",\n      value: this.state.lastName,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), \"Address_1:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      rows: \"4\",\n      cols: \"50\",\n      name: \"address_1\",\n      value: this.state.address_1,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), \"Address_2:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      rows: \"4\",\n      cols: \"50\",\n      name: \"address_2\",\n      value: this.state.address_2,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), \"Country:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"shippingCountry\",\n      onChange: this.handleChangeCountry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.state.countryList.map((e, key) => {\n      return React.createElement(\"option\", {\n        key: key,\n        value: e.countryId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, e.name);\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), \"Phone Number:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"phoneNumber\",\n      value: this.state.mobileNumber,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), \"Email:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"emailId\",\n      value: this.state.email,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), \"City:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"city\",\n      value: this.state.city,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), \"Zone:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"shippingZone\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, this.state.zoneList.map((e, key) => {\n      return React.createElement(\"option\", {\n        key: key,\n        value: e.zoneId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, e.name);\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), \"PinCode:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"pincode\",\n      value: this.state.pincode,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.Checkout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default Checkout;","map":{"version":3,"sources":["/var/www/html/ecommerce-app/src/Component/checkout/checkout.js"],"names":["React","API","Checkout","Component","constructor","props","state","getProfileList","countryList","zoneList","firstName","firstNameError","lastName","lastNameError","email","emailError","mobileNumber","mobileNumberError","address_1","address_1Error","address_2","city","cityError","zone","zoneError","pincode","pincodeError","country","countryError","productDetails","location","name","console","log","handleChangeName","bind","handleChange","handleChangeCountry","componentDidMount","getCountryList","then","findresponse","setState","data","catch","status","message","getZoneList","getProfile","event","target","value","obj","shippingFirstName","emailId","phoneNumber","shippingLastName","shippingAddress_1","shippingAddress_2","shippingCity","shippingZone","shippingPostCode","shippingCountry","checkoutListOrder","window","href","render","map","e","key","countryId","zoneId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport API from '../../service/homeservice';\nimport './checkout.css';\n\nclass Checkout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            getProfileList: [],\n            countryList: [],\n            zoneList:[],\n            firstName: '',\n            firstNameError:'',\n            lastName: '',\n            lastNameError:'',\n            email: '',\n            emailError:'',\n            mobileNumber: '',\n            mobileNumberError:'',\n            address_1: '',\n            address_1Error:'',\n            address_2: '',\n            city: '',\n            cityError:'',\n            zone: '',\n            zoneError:'',\n            pincode:'',\n            pincodeError:'',\n            country:'',\n            countryError:''\n\n        }\n        this.productDetails = this.props.location.state.name;\n        console.log(\"data\", this.productDetails);\n        this.handleChangeName = this.handleChangeName.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeCountry = this.handleChangeCountry.bind(this);\n        this.Checkout = this.Checkout.bind(this);\n    }\n\n    componentDidMount() {\n\n        API.getCountryList().\n            then((findresponse) => {\n                // console.log(\"getCountryList response===\", findresponse);\n                this.setState({ countryList: findresponse.data.data })\n                console.log(\"countryList==\", this.state.countryList);\n\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n\n\n        API.getZoneList().\n            then((findresponse) => {\n                console.log(\"getZoneList response===\", findresponse);\n                this.setState({ zoneList: findresponse.data.data })\n                console.log(\"data==\", this.state.zoneList);\n\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n\n        API.getProfile().\n            then((findresponse) => {\n                // console.log(\"getProfile response===\", findresponse);\n                this.setState({ getProfileList: findresponse.data.data })\n                console.log(\"data==\", this.state.getProfileList);\n                this.setState({\n                    firstName: this.state.getProfileList.firstName,\n                    email: this.state.getProfileList.email,\n                    mobileNumber: this.state.getProfileList.mobileNumber\n                });\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n    }\n\n    handleChangeName(event) {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleChange(event) {\n        this.setState({zone:event.target.value})\n    }\n\n    handleChangeCountry(event) {\n        this.setState({country:event.target.value})\n    }\n\n    Checkout() {\n        const obj = {\n            productDetails:this.productDetails,\n            shippingFirstName: this.state.firstName,\n            emailId: this.state.email,\n            phoneNumber: this.state.mobileNumber,\n            shippingLastName: this.state.lastName,\n            shippingAddress_1: this.state.address_1,\n            shippingAddress_2: this.state.address_2,\n            shippingCity: this.state.city,\n            shippingZone:this.state.zone,\n            shippingPostCode:this.state.pincode,\n            shippingCountry:this.state.country\n\n        }\n       \n        API.checkoutListOrder(obj).\n        then((findresponse) => {\n            console.log(\"checkoutListOrder response===\", findresponse);\n            window.location.href = '/home';\n        }).catch(\n            { status: 500, message: 'Internal Server Error' }\n        ); \n    }\n\n    render() {\n        return (\n            <div>\n                <form className=\"center\">\n                    First name:<br />\n                    <input type=\"text\" name=\"firstName\" value={this.state.firstName}\n                        onChange={this.handleChangeName} />\n                    <br />\n                    Last name:<br />\n                    <input type=\"text\" name=\"lastName\" value={this.state.lastName}\n                        onChange={this.handleChangeName} />\n                    <br />\n                    Address_1:<br />\n                    <textarea rows=\"4\" cols=\"50\" name=\"address_1\" value={this.state.address_1} onChange={this.handleChangeName}>\n\n                    </textarea>\n                    <br />\n                    Address_2:<br />\n                    <textarea rows=\"4\" cols=\"50\" name=\"address_2\" value={this.state.address_2} onChange={this.handleChangeName}>\n\n                    </textarea>\n                    <br />\n                    Country:<br />\n                    <select name=\"shippingCountry\" onChange={this.handleChangeCountry}>\n                        {this.state.countryList.map((e, key) => {\n                            return <option key={key} value={e.countryId}>{e.name}</option>;\n                        })}\n                    </select>\n                    <br />\n                    Phone Number:<br />\n                    <input type=\"text\" name=\"phoneNumber\" value={this.state.mobileNumber}\n                        onChange={this.handleChangeName} />\n                    <br />\n                    Email:<br />\n                    <input type=\"text\" name=\"emailId\" value={this.state.email}\n                        onChange={this.handleChangeName} />\n                    <br />\n                    City:<br />\n                    <input type=\"text\" name=\"city\" value={this.state.city}\n                        onChange={this.handleChangeName} />\n                    <br />\n                    Zone:<br />\n                    <select name=\"shippingZone\" onChange={this.handleChange}>\n                        {this.state.zoneList.map((e, key) => {\n                            return <option key={key} value={e.zoneId}>{e.name}</option>;\n                        })}\n                    </select>\n                    <br />\n                    PinCode:<br />\n                    <input type=\"text\" name=\"pincode\" value={this.state.pincode}\n                        onChange={this.handleChangeName} />\n                    <br />\n                    <button type=\"button\" onClick={this.Checkout} >Submit</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}