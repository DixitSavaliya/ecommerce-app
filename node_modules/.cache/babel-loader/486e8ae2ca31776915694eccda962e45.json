{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ecommerce-app/src/Component/address/address.js\";\nimport React from 'react';\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass Address extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      getProfileList: [],\n      addressList: [],\n      id: '',\n      address_1: '',\n      address_1Error: '',\n      address_2: '',\n      city: '',\n      cityError: '',\n      state: '',\n      stateError: '',\n      pincode: '',\n      pincodeError: '',\n      address: ''\n    };\n    this.getAddress = this.getAddress.bind(this);\n  }\n\n  componentDidMount() {\n    API.getProfile().then(findresponse => {\n      console.log(\"getProfile response===\", findresponse);\n      this.setState({\n        getProfileList: findresponse.data.data\n      });\n      console.log(\"data==\", this.state.getProfileList);\n      this.setState({\n        id: this.state.getProfileList.id\n      });\n      this.getAddress(this.state.id);\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n\n  getAddress(id) {\n    console.log(\"id===\", id);\n    API.getAddress(id).then(findresponse => {\n      console.log(\"getAddress response===\", findresponse);\n      this.setState({\n        addressList: findresponse.data.data\n      });\n      console.log(\"addressList[[[[[[===---\", this.state.addressList);\n      this.setState({\n        address: this.state.addressList.addressId\n      });\n      console.log(\"addressid===\", this.state.address);\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n\n  addressDelete() {\n    console.log(\"msg\", this.state.address); // API.deleteAddress(deleteId).\n    // then((findresponse) => {\n    //     console.log(\"deleteAddress response===\", findresponse);\n    // }).catch(\n    //     { status: 500, message: 'Internal Server Error' }\n    // );\n  }\n\n  render() {\n    let displayData;\n    if (this.state.addressList) displayData = this.state.addressList.map((data, index) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, data.address1), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, data.address2), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, data.city), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, data.postcode), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, data.state)), React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: {\n        pathname: \"/editaddress/\".concat(data.addressId),\n        state: {\n          name: data\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"i\", {\n      class: \"fas fa-trash\",\n      onClick: this.deleteaddress.bind(this, text),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, displayData)), React.createElement(\"div\", {\n      className: \"text-center mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/addnewaddress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"unique\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"AddNewAddress\")))));\n  }\n\n}\n\nexport default Address;","map":{"version":3,"sources":["/var/www/html/ecommerce-app/src/Component/address/address.js"],"names":["React","API","MDBContainer","MDBRow","MDBCol","MDBBtn","BrowserRouter","Router","Route","Link","Address","Component","constructor","props","state","getProfileList","addressList","id","address_1","address_1Error","address_2","city","cityError","stateError","pincode","pincodeError","address","getAddress","bind","componentDidMount","getProfile","then","findresponse","console","log","setState","data","catch","status","message","addressId","addressDelete","render","displayData","map","index","address1","address2","postcode","pathname","name","deleteaddress","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass Address extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            getProfileList: [],\n            addressList: [],\n            id: '',\n            address_1: '',\n            address_1Error: '',\n            address_2: '',\n            city: '',\n            cityError: '',\n            state: '',\n            stateError: '',\n            pincode: '',\n            pincodeError: '',\n            address:''\n        }\n        this.getAddress = this.getAddress.bind(this);\n    }\n\n    componentDidMount() {\n        API.getProfile().\n            then((findresponse) => {\n                console.log(\"getProfile response===\", findresponse);\n                this.setState({ getProfileList: findresponse.data.data })\n                console.log(\"data==\", this.state.getProfileList);\n                this.setState({\n                    id: this.state.getProfileList.id\n                });\n                this.getAddress(this.state.id);\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n    }\n\n\n    getAddress(id) {\n        console.log(\"id===\", id);\n        API.getAddress(id).\n            then((findresponse) => {\n                console.log(\"getAddress response===\", findresponse);\n                this.setState({ addressList: findresponse.data.data });\n                console.log(\"addressList[[[[[[===---\", this.state.addressList);\n                this.setState({ address: this.state.addressList.addressId});\n                console.log(\"addressid===\",this.state.address);\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n    }\n\n    addressDelete() {\n        console.log(\"msg\",this.state.address);\n     \n        // API.deleteAddress(deleteId).\n        // then((findresponse) => {\n        //     console.log(\"deleteAddress response===\", findresponse);\n        // }).catch(\n        //     { status: 500, message: 'Internal Server Error' }\n        // );\n    }\n\n    render() {\n        let displayData;\n        if (this.state.addressList) displayData = this.state.addressList.map((data,index) =>\n            <div>\n                <div className=\"grey-text\">\n                    Address\n            </div>\n                <div className=\"row\">\n                    <div className=\"col-md-8\">\n                        <p>{data.address1}</p>\n                        <p>{data.address2}</p>\n                        <p>{data.city}</p>\n                        <p>{data.postcode}</p>\n                        <p>{data.state}</p>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <Link to={{ pathname: `/editaddress/${data.addressId}`, state: { name:data } }}><i class=\"fas fa-edit\"></i></Link>\n                        <i class=\"fas fa-trash\" onClick={this.deleteaddress.bind(this, text)}></i>\n                    </div>\n                </div>\n                <br />\n            </div>\n        )\n        return (\n            <div>\n                <MDBContainer>\n                    <MDBRow>\n                        <div>\n                            {displayData}\n                        </div>\n                    </MDBRow>\n                    <div className=\"text-center mt-4\">\n                        <Link to=\"/addnewaddress\"><MDBBtn color=\"unique\">\n                            AddNewAddress\n                        </MDBBtn></Link>\n                    </div>\n                </MDBContainer>\n            </div>\n        );\n    }\n}\n\nexport default Address;\n"]},"metadata":{},"sourceType":"module"}