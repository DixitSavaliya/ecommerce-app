{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ecommerce-app/src/Component/addnewaddress/addnewaddress.js\";\nimport React from 'react';\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport history from '../../history';\n\nclass Address extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let address_1Error = \"\";\n      let cityError = \"\";\n      let stateError = \"\";\n      let pincodeError = \"\";\n      let address_2Error = \"\";\n\n      if (!this.state.address_1) {\n        address_1Error = \"please enter address_1\";\n      }\n\n      if (!this.state.address_2) {\n        address_2Error = \"please enter  address_2\";\n      }\n\n      if (!this.state.city) {\n        cityError = \"please enter city\";\n      }\n\n      if (!this.state.state) {\n        stateError = \"please enter state\";\n      }\n\n      if (!this.state.pincode) {\n        pincodeError = \"please enter pincode\";\n      }\n\n      if (address_1Error || address_2Error || cityError || stateError || pincodeError) {\n        this.setState({\n          address_1Error,\n          address_2Error,\n          cityError,\n          stateError,\n          pincodeError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.state = {\n      getProfileList: [],\n      addressList: [],\n      id: '',\n      address_1: '',\n      address_1Error: '',\n      address_2: '',\n      address_2Error: '',\n      city: '',\n      cityError: '',\n      state: '',\n      stateError: '',\n      pincode: '',\n      pincodeError: ''\n    };\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.addAddress = this.addAddress.bind(this);\n  }\n\n  componentDidMount() {\n    API.getProfile().then(findresponse => {\n      console.log(\"getProfile response===\", findresponse);\n      this.setState({\n        getProfileList: findresponse.data.data\n      });\n      console.log(\"data==\", this.state.getProfileList);\n      this.setState({\n        id: this.state.getProfileList.id\n      });\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n\n  /** \n  * @param {JSON} event\n  * handleChangeName\n  */\n  handleChangeName(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n  /** Add Address */\n\n\n  addAddress() {\n    const obj = {\n      customerId: this.state.getProfileList.id,\n      address1: this.state.address_1,\n      address2: this.state.address_2,\n      city: this.state.city,\n      state: this.state.state,\n      postcode: this.state.pincode\n    };\n    API.addAddress(obj).then(findresponse => {\n      console.log(\"addAddress response===\", findresponse);\n      history.push('/address');\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Address_1\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"address_1\",\n      value: this.state.address_1,\n      onChange: this.handleChangeName,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"City\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"city\",\n      value: this.state.city,\n      onChange: this.handleChangeName,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Pincode\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"pincode\",\n      value: this.state.pincode,\n      onChange: this.handleChangeName,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }))), React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Address_2\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"address_2\",\n      value: this.state.address_2,\n      onChange: this.handleChangeName,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"State\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"state\",\n      value: this.state.state,\n      onChange: this.handleChangeName,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"text-center mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"unique\",\n      onClick: this.addAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nexport default Address;","map":{"version":3,"sources":["/var/www/html/ecommerce-app/src/Component/addnewaddress/addnewaddress.js"],"names":["React","API","MDBContainer","MDBRow","MDBCol","MDBBtn","BrowserRouter","Router","Route","Link","history","Address","Component","constructor","props","validate","address_1Error","cityError","stateError","pincodeError","address_2Error","state","address_1","address_2","city","pincode","setState","getProfileList","addressList","id","handleChangeName","bind","addAddress","componentDidMount","getProfile","then","findresponse","console","log","data","catch","status","message","event","target","name","value","obj","customerId","address1","address2","postcode","push","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport history from '../../history';\n\nclass Address extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            getProfileList: [],\n            addressList: [],\n            id: '',\n            address_1: '',\n            address_1Error: '',\n            address_2: '',\n            address_2Error: '',\n            city: '',\n            cityError: '',\n            state: '',\n            stateError: '',\n            pincode: '',\n            pincodeError: ''\n        }\n        this.handleChangeName = this.handleChangeName.bind(this);\n        this.addAddress = this.addAddress.bind(this);\n    }\n\n    componentDidMount() {\n        API.getProfile().\n            then((findresponse) => {\n                console.log(\"getProfile response===\", findresponse);\n                this.setState({ getProfileList: findresponse.data.data })\n                console.log(\"data==\", this.state.getProfileList);\n                this.setState({\n                    id: this.state.getProfileList.id\n                });\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n    }\n\n    validate = () => {\n        let address_1Error = \"\";\n        let cityError = \"\";\n        let stateError = \"\";\n        let pincodeError = \"\";\n        let address_2Error = \"\";\n\n        if (!this.state.address_1) {\n            address_1Error = \"please enter address_1\";\n        }\n\n\n        if (!this.state.address_2) {\n            address_2Error = \"please enter  address_2\";\n        }\n\n        if (!this.state.city) {\n            cityError = \"please enter city\";\n        }\n\n        if (!this.state.state) {\n            stateError = \"please enter state\";\n        }\n\n        if (!this.state.pincode) {\n            pincodeError = \"please enter pincode\";\n        }\n\n        if (address_1Error || address_2Error || cityError || stateError || pincodeError ) {\n            this.setState({ address_1Error, address_2Error, cityError, stateError, pincodeError });\n            return false;\n        }\n        return true;\n    };\n\n\n    /** \n    * @param {JSON} event\n    * handleChangeName\n    */\n    handleChangeName(event) {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    /** Add Address */\n    addAddress() {\n        const obj = {\n            customerId: this.state.getProfileList.id,\n            address1: this.state.address_1,\n            address2: this.state.address_2,\n            city: this.state.city,\n            state: this.state.state,\n            postcode: this.state.pincode\n        }\n        API.addAddress(obj).\n            then((findresponse) => {\n                console.log(\"addAddress response===\", findresponse);\n                history.push('/address');\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n    }\n\n    render() {\n        return (\n            <div>\n                <MDBContainer>\n                    <MDBRow>\n                        <MDBCol md=\"6\">\n                            <form>\n                                <label className=\"grey-text\">\n                                    Address_1\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    name=\"address_1\"\n                                    value={this.state.address_1}\n                                    onChange={this.handleChangeName}\n                                    className=\"form-control\"\n                                />\n                                <br />\n                                <label className=\"grey-text\">\n                                    City\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    name=\"city\"\n                                    value={this.state.city}\n                                    onChange={this.handleChangeName}\n                                    className=\"form-control\"\n                                />\n                                <br />\n                                <label\n                                    className=\"grey-text\"\n                                >\n                                    Pincode\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    name=\"pincode\"\n                                    value={this.state.pincode}\n                                    onChange={this.handleChangeName}\n                                    className=\"form-control\"\n                                />\n                                <br />\n                            </form>\n                        </MDBCol>\n\n                        <MDBCol md=\"6\">\n                            <form>\n                                <label className=\"grey-text\">\n                                    Address_2\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    name=\"address_2\"\n                                    value={this.state.address_2}\n                                    onChange={this.handleChangeName}\n                                    className=\"form-control\"\n                                />\n                                <br />\n                                <label className=\"grey-text\">\n                                    State\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    name=\"state\"\n                                    value={this.state.state}\n                                    onChange={this.handleChangeName}\n                                    className=\"form-control\"\n                                />\n                                <br />\n                            </form>\n                        </MDBCol>\n                    </MDBRow>\n                    <div className=\"text-center mt-4\">\n                        <MDBBtn color=\"unique\" onClick={this.addAddress} >\n                            Save\n                         </MDBBtn>\n                    </div>\n                </MDBContainer>\n            </div>\n        );\n    }\n}\n\nexport default Address;\n"]},"metadata":{},"sourceType":"module"}