{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ecommerce-app/src/Component/singleproduct/singleproduct.js\";\nimport React from 'react';\nimport API from '../../service/homeservice';\nimport { config } from '../../config';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\n\nclass SingleProduct extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      productDetailList: [],\n      images: [],\n      isFetching: true\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"query=\", this.props.location.pathname.split('/')[2]);\n    const query = this.props.location.pathname.split('/')[2];\n    API.productDetail(query).then(findresponse => {\n      this.state.isFetching = false;\n      console.log(\"productDetail response===\", findresponse);\n      this.setState({\n        productDetailList: findresponse.data.data\n      });\n      this.state.productDetailList.map(data => {\n        data.productImage ? data.productImage.map(list => {\n          list.containerName ? this.setState({\n            images: [...this.state.images, config.baseMediaUrl + list.containerName + list.image]\n          }) : '';\n        }) : null;\n      });\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n\n  render() {\n    let displayData;\n    console.log(\"path images===\", this.state.images);\n    const isFetching = this.state.isFetching; // if (!isFetching && this.state.images) displayData = this.state.images.map(data =>\n    //     <div>\n    //         <Carousel>\n    //             <div>\n    //                 <img src={data} />\n    //             </div>\n    //         </Carousel>\n    //     </div>\n    // )\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default SingleProduct;","map":{"version":3,"sources":["/var/www/html/ecommerce-app/src/Component/singleproduct/singleproduct.js"],"names":["React","API","config","Carousel","SingleProduct","Component","constructor","props","state","productDetailList","images","isFetching","componentDidMount","console","log","location","pathname","split","query","productDetail","then","findresponse","setState","data","map","productImage","list","containerName","baseMediaUrl","image","catch","status","message","render","displayData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,2BAAhB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAO,uDAAP;AACA,SAASC,QAAT,QAAyB,2BAAzB;;AAEA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,iBAAiB,EAAE,EADV;AAETC,MAAAA,MAAM,EAAE,EAFC;AAGTC,MAAAA,UAAU,EAAE;AAHH,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKP,KAAL,CAAWQ,QAAX,CAAoBC,QAApB,CAA6BC,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAAtB;AACA,UAAMC,KAAK,GAAG,KAAKX,KAAL,CAAWQ,QAAX,CAAoBC,QAApB,CAA6BC,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAAd;AACAhB,IAAAA,GAAG,CAACkB,aAAJ,CAAkBD,KAAlB,EACIE,IADJ,CACUC,YAAD,IAAkB;AACnB,WAAKb,KAAL,CAAWG,UAAX,GAAwB,KAAxB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCO,YAAzC;AACA,WAAKC,QAAL,CAAc;AAAEb,QAAAA,iBAAiB,EAAEY,YAAY,CAACE,IAAb,CAAkBA;AAAvC,OAAd;AACA,WAAKf,KAAL,CAAWC,iBAAX,CAA6Be,GAA7B,CAAiCD,IAAI,IAAI;AACrCA,QAAAA,IAAI,CAACE,YAAL,GACIF,IAAI,CAACE,YAAL,CAAkBD,GAAlB,CAAsBE,IAAI,IAAI;AAC1BA,UAAAA,IAAI,CAACC,aAAL,GAAsB,KAAKL,QAAL,CAAc;AAChCZ,YAAAA,MAAM,EAAE,CAAC,GAAG,KAAKF,KAAL,CAAWE,MAAf,EAAuBR,MAAM,CAAC0B,YAAP,GAAsBF,IAAI,CAACC,aAA3B,GAA2CD,IAAI,CAACG,KAAvE;AADwB,WAAd,CAAtB,GAEO,EAFP;AAGH,SAJD,CADJ,GAOK,IAPL;AAQH,OATD;AAWH,KAhBL,EAgBOC,KAhBP,CAiBQ;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAjBR;AAmBH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,WAAJ;AACArB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKN,KAAL,CAAWE,MAAzC;AAFK,UAGGC,UAHH,GAGkB,KAAKH,KAHvB,CAGGG,UAHH,EAKL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AAtDuC;;AAyD5C,eAAeP,aAAf","sourcesContent":["import React from 'react';\nimport API from '../../service/homeservice';\nimport { config } from '../../config';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\n\nclass SingleProduct extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            productDetailList: [],\n            images: [],\n            isFetching: true\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"query=\", this.props.location.pathname.split('/')[2]);\n        const query = this.props.location.pathname.split('/')[2];\n        API.productDetail(query).\n            then((findresponse) => {\n                this.state.isFetching = false;\n                console.log(\"productDetail response===\", findresponse);\n                this.setState({ productDetailList: findresponse.data.data });\n                this.state.productDetailList.map(data => {\n                    data.productImage ? (\n                        data.productImage.map(list => {\n                            list.containerName ? (this.setState({\n                                images: [...this.state.images, config.baseMediaUrl + list.containerName + list.image]\n                            })) : ('')\n                        }\n                        )\n                    ) : (null)\n                }\n                )\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n    }\n\n    render() {\n        let displayData;\n        console.log(\"path images===\", this.state.images);\n        const { isFetching } = this.state;\n\n        // if (!isFetching && this.state.images) displayData = this.state.images.map(data =>\n        //     <div>\n        //         <Carousel>\n        //             <div>\n        //                 <img src={data} />\n        //             </div>\n        //         </Carousel>\n        //     </div>\n        // )\n\n        return (\n            <div>\n                {/* {displayData} */}\n            </div>\n        );\n    }\n}\n\nexport default SingleProduct;\n"]},"metadata":{},"sourceType":"module"}