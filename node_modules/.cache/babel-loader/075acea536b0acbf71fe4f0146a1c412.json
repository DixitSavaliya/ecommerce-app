{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ecommerce-app/src/Component/updatepassword/updatepassword.js\";\nimport React from 'react';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBBtn } from 'mdbreact';\nimport history from '../../history';\nimport Header from '../../Component/home/header/header';\nimport Footer from '../../Component/home/footer/footer';\nimport Swal from 'sweetalert2';\n\nclass UpdatePassword extends React.Component {\n  /** First Constructor Call */\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let oldPasswordError = \"\";\n      let newPasswordError = \"\";\n      let confirmPasswordError = \"\";\n\n      if (!this.state.oldPassword) {\n        oldPasswordError = \"please enter old password\";\n      }\n\n      if (!this.state.newPassword) {\n        newPasswordError = \"please enter new password\";\n      }\n\n      if (!this.state.confirmPassword) {\n        confirmPasswordError = \"please enter confirm password\";\n      }\n\n      if (oldPasswordError || newPasswordError || confirmPasswordError) {\n        this.setState({\n          oldPasswordError,\n          newPasswordError,\n          confirmPasswordError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.state = {\n      oldPassword: '',\n      oldPasswordError: '',\n      newPassword: '',\n      newPasswordError: '',\n      confirmPassword: '',\n      confirmPasswordError: ''\n    };\n    this.handleChangeEvent = this.handleChangeEvent.bind(this);\n    this.UpdatePassword = this.UpdatePassword.bind(this);\n  }\n  /** onChange event  */\n\n\n  handleChangeEvent(event) {\n    event.preventDefault();\n    const state = this.state;\n    state[event.target.name] = event.target.value;\n    this.setState(state);\n  }\n  /** validation of updatepassword form */\n\n\n  /** Update Password */\n  UpdatePassword() {\n    const isValid = this.validate();\n\n    if (isValid) {\n      console.log(this.state);\n      this.setState({\n        oldPassword: '',\n        oldPasswordError: '',\n        newPassword: '',\n        newPasswordError: '',\n        confirmPassword: '',\n        confirmPasswordError: ''\n      });\n    }\n\n    ;\n\n    if (this.state.oldPassword && this.state.newPassword && this.state.confirmPassword) {\n      if (this.state.newPassword === this.state.confirmPassword) {\n        const obj = {\n          oldPassword: this.state.oldPassword,\n          newPassword: this.state.newPassword\n          /** Update Password */\n\n        };\n        API.UpdatePasswordUser(obj).then(findresponse => {\n          Swal.fire(\"Password Updated Successfully!\", \"\", \"success\");\n          history.push('/home');\n        }).catch({\n          status: 500,\n          message: 'Internal Server Error'\n        });\n      } else {\n        Swal.fire(\"Does not match new password && confirm password!\", \"\", \"warning\");\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"h4 text-center mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"UpdatePassword\")), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Your old password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"oldPassword\",\n      id: \"defaultFormRegisterPasswordEx2\",\n      className: \"form-control\",\n      value: this.state.oldPassword,\n      onChange: this.handleChangeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.state.oldPasswordError), React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Your new password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"newPassword\",\n      id: \"defaultFormRegisterPasswordEx3\",\n      className: \"form-control\",\n      value: this.state.newPassword,\n      onChange: this.handleChangeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.state.newPasswordError), React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"confirm password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"confirmPassword\",\n      id: \"defaultFormRegisterPasswordEx3\",\n      className: \"form-control\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChangeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.state.confirmPasswordError), React.createElement(\"div\", {\n      className: \"text-center mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"primary\",\n      onClick: this.UpdatePassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Update Password\"))))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default UpdatePassword;","map":{"version":3,"sources":["/var/www/html/ecommerce-app/src/Component/updatepassword/updatepassword.js"],"names":["React","API","MDBContainer","MDBRow","MDBBtn","history","Header","Footer","Swal","UpdatePassword","Component","constructor","props","validate","oldPasswordError","newPasswordError","confirmPasswordError","state","oldPassword","newPassword","confirmPassword","setState","handleChangeEvent","bind","event","preventDefault","target","name","value","isValid","console","log","obj","UpdatePasswordUser","then","findresponse","fire","push","catch","status","message","render","fontSize","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBBtn } from 'mdbreact';\nimport history from '../../history';\nimport Header from '../../Component/home/header/header';\nimport Footer from '../../Component/home/footer/footer';\nimport Swal from 'sweetalert2';\n\nclass UpdatePassword extends React.Component {\n\n    /** First Constructor Call */\n    constructor(props) {\n        super(props);\n        this.state = {\n            oldPassword: '',\n            oldPasswordError: '',\n            newPassword: '',\n            newPasswordError: '',\n            confirmPassword: '',\n            confirmPasswordError: ''\n        }\n        this.handleChangeEvent = this.handleChangeEvent.bind(this);\n        this.UpdatePassword = this.UpdatePassword.bind(this);\n    }\n\n    /** onChange event  */\n    handleChangeEvent(event) {\n        event.preventDefault();\n        const state = this.state\n        state[event.target.name] = event.target.value;\n        this.setState(state);\n    }\n\n    /** validation of updatepassword form */\n    validate = () => {\n        let oldPasswordError = \"\";\n        let newPasswordError = \"\";\n        let confirmPasswordError = \"\";\n\n        if (!this.state.oldPassword) {\n            oldPasswordError = \"please enter old password\";\n        }\n\n        if (!this.state.newPassword) {\n            newPasswordError = \"please enter new password\";\n        }\n\n        if (!this.state.confirmPassword) {\n            confirmPasswordError = \"please enter confirm password\";\n        }\n\n        if (oldPasswordError || newPasswordError || confirmPasswordError) {\n            this.setState({ oldPasswordError, newPasswordError, confirmPasswordError });\n            return false;\n        }\n        return true;\n    };\n\n\n    /** Update Password */\n    UpdatePassword() {\n        const isValid = this.validate();\n        if (isValid) {\n            console.log(this.state);\n            this.setState({\n                oldPassword: '',\n                oldPasswordError: '',\n                newPassword: '',\n                newPasswordError: '',\n                confirmPassword: '',\n                confirmPasswordError: ''\n            })\n        };\n\n        if (this.state.oldPassword && this.state.newPassword && this.state.confirmPassword) {\n            if (this.state.newPassword === this.state.confirmPassword) {\n                const obj = {\n                    oldPassword: this.state.oldPassword,\n                    newPassword: this.state.newPassword,\n                }\n                /** Update Password */\n                API.UpdatePasswordUser(obj)\n                    .then((findresponse) => {\n                        Swal.fire(\"Password Updated Successfully!\", \"\", \"success\");\n                        history.push('/home');\n                    }).catch({ status: 500, message: 'Internal Server Error' });\n            } else {\n                Swal.fire(\"Does not match new password && confirm password!\", \"\", \"warning\");\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Header />\n                {/** Update Password form */}\n                <MDBContainer>\n                    <MDBRow>\n                        <h1 className=\"h4 text-center mb-4\">UpdatePassword</h1>\n                    </MDBRow>\n                    <MDBRow>\n                        <form>\n                            <label\n                                className=\"grey-text\"\n                            >\n                                Your old password\n                            </label>\n                            <input\n                                type=\"password\"\n                                name=\"oldPassword\"\n                                id=\"defaultFormRegisterPasswordEx2\"\n                                className=\"form-control\"\n                                value={this.state.oldPassword}\n                                onChange={this.handleChangeEvent}\n                            />\n                            <div style={{ fontSize: 12, color: \"red\" }}>\n                                {this.state.oldPasswordError}\n                            </div>\n                            <label\n                                className=\"grey-text\"\n                            >\n                                Your new password\n                            </label>\n                            <input\n                                type=\"password\"\n                                name=\"newPassword\"\n                                id=\"defaultFormRegisterPasswordEx3\"\n                                className=\"form-control\"\n                                value={this.state.newPassword}\n                                onChange={this.handleChangeEvent}\n                            />\n                            <div style={{ fontSize: 12, color: \"red\" }}>\n                                {this.state.newPasswordError}\n                            </div>\n                            <label\n                                className=\"grey-text\"\n                            >\n                                confirm password\n                            </label>\n                            <input\n                                type=\"password\"\n                                name=\"confirmPassword\"\n                                id=\"defaultFormRegisterPasswordEx3\"\n                                className=\"form-control\"\n                                value={this.state.confirmPassword}\n                                onChange={this.handleChangeEvent}\n                            />\n                            <div style={{ fontSize: 12, color: \"red\" }}>\n                                {this.state.confirmPasswordError}\n                            </div>\n                            <div className=\"text-center mt-4\">\n                                <MDBBtn color=\"primary\" onClick={this.UpdatePassword}>\n                                    Update Password\n                                </MDBBtn>\n                            </div>\n                        </form>\n                    </MDBRow>\n                </MDBContainer>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default UpdatePassword;\n"]},"metadata":{},"sourceType":"module"}