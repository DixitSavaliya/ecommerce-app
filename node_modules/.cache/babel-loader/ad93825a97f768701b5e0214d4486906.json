{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ecommerce-app/src/Component/updatepassword/updatepassword.js\";\nimport React from 'react';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport API from '../../service/signup.service';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport history from '../../history';\nimport Swal from 'sweetalert2';\nimport '../login/login.css';\n\nclass UpdatePassword extends React.Component {\n  /** First Constructor Call */\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let emailError = \"\";\n      let oldPasswordError = \"\";\n      let newPasswordError = \"\";\n      let confirmPasswordError = \"\";\n      const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      if (!reg.test(this.state.email)) {\n        emailError = \"invalid email\";\n      }\n\n      const regex = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/;\n\n      if (!regex.test(this.state.oldPassword)) {\n        oldPasswordError = \"please enter old password\";\n      }\n\n      if (!regex.test(this.state.oldPassword)) {\n        newPasswordError = \"please enter new password\";\n      }\n\n      if (!regex.test(this.state.confirmPassword)) {\n        confirmPasswordError = \"please enter confirm password\";\n      }\n\n      if (emailError || oldPasswordError || newPasswordError || confirmPasswordError) {\n        this.setState({\n          emailError,\n          oldPasswordError,\n          newPasswordError,\n          confirmPasswordError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.state = {\n      email: '',\n      emailError: '',\n      oldPassword: '',\n      oldPasswordError: '',\n      newPassword: '',\n      newPasswordError: '',\n      confirmPassword: '',\n      confirmPasswordError: ''\n    };\n    this.handleChangeEvent = this.handleChangeEvent.bind(this);\n    this.UpdatePassword = this.UpdatePassword.bind(this);\n  }\n  /** onChange event  */\n\n\n  handleChangeEvent(event) {\n    event.preventDefault();\n    const state = this.state;\n    state[event.target.name] = event.target.value;\n    this.setState(state);\n  }\n  /** validation of updatepassword form */\n\n\n  /** Update Password */\n  UpdatePassword() {\n    const isValid = this.validate();\n\n    if (isValid) {\n      console.log(this.state);\n      this.setState({\n        email: '',\n        emailError: '',\n        oldPassword: '',\n        oldPasswordError: '',\n        newPassword: '',\n        newPasswordError: '',\n        confirmPassword: '',\n        confirmPasswordError: ''\n      });\n    }\n\n    ;\n\n    if (this.state.email && this.state.oldPassword && this.state.newPassword && this.state.confirmPassword) {\n      const obj = {\n        email: this.state.email,\n        oldPassword: this.state.oldPassword,\n        newPassword: this.state.newPassword,\n        confirmPassword: this.state.confirmPassword\n      };\n      API.UpdatePasswordUser(obj).then(findresponse => {\n        console.log(\"response==\", findresponse);\n        Swal.fire(\"Password Update Succesfully!\", \"\", \"success\");\n        history.push('../home');\n      }).catch({\n        status: 500,\n        message: 'Internal Server Error'\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"h4 text-center mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"UpdatePassword\"), React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"email\"), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      id: \"defaultFormRegisterEmailEx1\",\n      className: \"form-control\",\n      value: this.state.email,\n      onChange: this.handleChangeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.state.emailError), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Your old password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"oldPassword\",\n      id: \"defaultFormRegisterPasswordEx2\",\n      className: \"form-control\",\n      value: this.state.oldPassword,\n      onChange: this.handleChangeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, this.state.oldPasswordError), React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Your new password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"newPassword\",\n      id: \"defaultFormRegisterPasswordEx3\",\n      className: \"form-control\",\n      value: this.state.newPassword,\n      onChange: this.handleChangeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.state.newPasswordError), React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Your confirm password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"confirmPassword\",\n      id: \"defaultFormRegisterPasswordEx4\",\n      className: \"form-control\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChangeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, this.state.confirmPasswordError), React.createElement(\"div\", {\n      className: \"text-center mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"unique\",\n      onClick: this.UpdatePassword,\n      disabled: !this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Update Password\"))))));\n  }\n\n}\n\nexport default UpdatePassword;","map":{"version":3,"sources":["/var/www/html/ecommerce-app/src/Component/updatepassword/updatepassword.js"],"names":["React","API","MDBContainer","MDBRow","MDBCol","MDBBtn","history","Swal","UpdatePassword","Component","constructor","props","validate","emailError","oldPasswordError","newPasswordError","confirmPasswordError","reg","test","state","email","regex","oldPassword","confirmPassword","setState","newPassword","handleChangeEvent","bind","event","preventDefault","target","name","value","isValid","console","log","obj","UpdatePasswordUser","then","findresponse","fire","push","catch","status","message","render","fontSize","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport API from '../../service/signup.service';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport history from '../../history';\nimport Swal from 'sweetalert2';\nimport '../login/login.css';\n\nclass UpdatePassword extends React.Component {\n\n    /** First Constructor Call */\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            emailError: '',\n            oldPassword: '',\n            oldPasswordError: '',\n            newPassword: '',\n            newPasswordError: '',\n            confirmPassword: '',\n            confirmPasswordError: ''\n        }\n        this.handleChangeEvent = this.handleChangeEvent.bind(this);\n        this.UpdatePassword = this.UpdatePassword.bind(this);\n    }\n\n    /** onChange event  */\n    handleChangeEvent(event) {\n        event.preventDefault();\n        const state = this.state\n        state[event.target.name] = event.target.value;\n        this.setState(state);\n    }\n\n    /** validation of updatepassword form */\n    validate = () => {\n        let emailError = \"\";\n        let oldPasswordError = \"\";\n        let newPasswordError = \"\";\n        let confirmPasswordError = \"\";\n\n        const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        if (!reg.test(this.state.email)) {\n            emailError = \"invalid email\";\n        }\n\n        const regex = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/;\n        if (!regex.test(this.state.oldPassword)) {\n            oldPasswordError = \"please enter old password\";\n        }\n\n        if (!regex.test(this.state.oldPassword)) {\n            newPasswordError = \"please enter new password\";\n        }\n\n        if (!regex.test(this.state.confirmPassword)) {\n            confirmPasswordError = \"please enter confirm password\";\n        }\n\n        if (emailError || oldPasswordError || newPasswordError || confirmPasswordError) {\n            this.setState({ emailError, oldPasswordError, newPasswordError, confirmPasswordError });\n            return false;\n        }\n        return true;\n    };\n\n\n    /** Update Password */\n    UpdatePassword() {\n        const isValid = this.validate();\n        if (isValid) {\n            console.log(this.state);\n            this.setState({\n                email: '',\n                emailError: '',\n                oldPassword: '',\n                oldPasswordError: '',\n                newPassword: '',\n                newPasswordError: '',\n                confirmPassword: '',\n                confirmPasswordError: ''\n            })\n        };\n\n        if (this.state.email && this.state.oldPassword && this.state.newPassword && this.state.confirmPassword) {\n            const obj = {\n                email: this.state.email,\n                oldPassword: this.state.oldPassword,\n                newPassword: this.state.newPassword,\n                confirmPassword: this.state.confirmPassword\n            }\n            API.UpdatePasswordUser(obj).\n                then((findresponse) => {\n                    console.log(\"response==\", findresponse);\n                    Swal.fire(\"Password Update Succesfully!\", \"\", \"success\");\n                    history.push('../home');\n                }).catch({ status: 500, message: 'Internal Server Error' });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <MDBContainer>\n                    <MDBRow>\n                        <form>\n                            <p className=\"h4 text-center mb-4\">UpdatePassword</p>\n                            <label className=\"grey-text\">\n                                email\n                            </label>\n                            <input\n                                type=\"email\"\n                                name=\"email\"\n                                id=\"defaultFormRegisterEmailEx1\"\n                                className=\"form-control\"\n                                value={this.state.email}\n                                onChange={this.handleChangeEvent}\n\n                            />\n                            <div style={{ fontSize: 12, color: \"red\" }}>\n                                {this.state.emailError}\n                            </div>\n                            <br />\n                            <label\n\n                                className=\"grey-text\"\n                            >\n                                Your old password\n                            </label>\n                            <input\n                                type=\"password\"\n                                name=\"oldPassword\"\n                                id=\"defaultFormRegisterPasswordEx2\"\n                                className=\"form-control\"\n                                value={this.state.oldPassword}\n                                onChange={this.handleChangeEvent}\n                            />\n                            <div style={{ fontSize: 12, color: \"red\" }}>\n                                {this.state.oldPasswordError}\n                            </div>\n                            <label\n\n                                className=\"grey-text\"\n                            >\n                                Your new password\n                            </label>\n                            <input\n                                type=\"password\"\n                                name=\"newPassword\"\n                                id=\"defaultFormRegisterPasswordEx3\"\n                                className=\"form-control\"\n                                value={this.state.newPassword}\n                                onChange={this.handleChangeEvent}\n                            />\n                            <div style={{ fontSize: 12, color: \"red\" }}>\n                                {this.state.newPasswordError}\n                            </div>\n                            <label\n                                className=\"grey-text\"\n                            >\n                                Your confirm password\n                            </label>\n                            <input\n                                type=\"password\"\n                                name=\"confirmPassword\"\n                                id=\"defaultFormRegisterPasswordEx4\"\n                                className=\"form-control\"\n                                value={this.state.confirmPassword}\n                                onChange={this.handleChangeEvent}\n                            />\n                            <div style={{ fontSize: 12, color: \"red\" }}>\n                                {this.state.confirmPasswordError}\n                            </div>\n                            <div className=\"text-center mt-4\">\n                                <MDBBtn color=\"unique\" onClick={this.UpdatePassword} disabled={!this.state.email}>\n                                    Update Password\n                                </MDBBtn>\n                            </div>\n                        </form>\n                    </MDBRow>\n                </MDBContainer>\n            </div>\n        );\n    }\n}\n\nexport default UpdatePassword;\n"]},"metadata":{},"sourceType":"module"}