{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ecommerce-app/src/Component/updatepassword/updatepassword.js\";\nimport React from 'react';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport history from '../../history';\nimport Swal from 'sweetalert2';\n\nclass UpdatePassword extends React.Component {\n  /** First Constructor Call */\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let oldPasswordError = \"\";\n      let newPasswordError = \"\";\n\n      if (!this.state.oldPassword) {\n        oldPasswordError = \"please enter old password\";\n      }\n\n      if (!this.state.newPassword) {\n        newPasswordError = \"please enter new password\";\n      }\n\n      if (oldPasswordError || newPasswordError) {\n        this.setState({\n          oldPasswordError,\n          newPasswordError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.state = {\n      oldPassword: '',\n      oldPasswordError: '',\n      newPassword: '',\n      newPasswordError: ''\n    };\n    this.handleChangeEvent = this.handleChangeEvent.bind(this);\n    this.UpdatePassword = this.UpdatePassword.bind(this);\n  }\n  /** onChange event  */\n\n\n  handleChangeEvent(event) {\n    event.preventDefault();\n    const state = this.state;\n    state[event.target.name] = event.target.value;\n    this.setState(state);\n  }\n  /** validation of updatepassword form */\n\n\n  /** Update Password */\n  UpdatePassword() {\n    const isValid = this.validate();\n\n    if (isValid) {\n      console.log(this.state);\n      this.setState({\n        email: '',\n        emailError: '',\n        oldPassword: '',\n        oldPasswordError: '',\n        newPassword: '',\n        newPasswordError: '',\n        confirmPassword: '',\n        confirmPasswordError: ''\n      });\n    }\n\n    ;\n\n    if (this.state.email && this.state.oldPassword && this.state.newPassword && this.state.confirmPassword) {\n      const obj = {\n        email: this.state.email,\n        oldPassword: this.state.oldPassword,\n        newPassword: this.state.newPassword,\n        confirmPassword: this.state.confirmPassword\n      };\n      API.UpdatePasswordUser(obj).then(findresponse => {\n        console.log(\"response==\", findresponse);\n        Swal.fire(\"Password Update Succesfully!\", \"\", \"success\");\n        history.push('../home');\n      }).catch({\n        status: 500,\n        message: 'Internal Server Error'\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"h4 text-center mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"UpdatePassword\"), React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"email\"), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      id: \"defaultFormRegisterEmailEx1\",\n      className: \"form-control\",\n      value: this.state.email,\n      onChange: this.handleChangeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.emailError), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Your old password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"oldPassword\",\n      id: \"defaultFormRegisterPasswordEx2\",\n      className: \"form-control\",\n      value: this.state.oldPassword,\n      onChange: this.handleChangeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.state.oldPasswordError), React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Your new password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"newPassword\",\n      id: \"defaultFormRegisterPasswordEx3\",\n      className: \"form-control\",\n      value: this.state.newPassword,\n      onChange: this.handleChangeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, this.state.newPasswordError), React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Your confirm password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"confirmPassword\",\n      id: \"defaultFormRegisterPasswordEx4\",\n      className: \"form-control\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChangeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.state.confirmPasswordError), React.createElement(\"div\", {\n      className: \"text-center mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"unique\",\n      onClick: this.UpdatePassword,\n      disabled: !this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Update Password\"))))));\n  }\n\n}\n\nexport default UpdatePassword;","map":{"version":3,"sources":["/var/www/html/ecommerce-app/src/Component/updatepassword/updatepassword.js"],"names":["React","API","MDBContainer","MDBRow","MDBCol","MDBBtn","history","Swal","UpdatePassword","Component","constructor","props","validate","oldPasswordError","newPasswordError","state","oldPassword","newPassword","setState","handleChangeEvent","bind","event","preventDefault","target","name","value","isValid","console","log","email","emailError","confirmPassword","confirmPasswordError","obj","UpdatePasswordUser","then","findresponse","fire","push","catch","status","message","render","fontSize","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport history from '../../history';\nimport Swal from 'sweetalert2';\n\nclass UpdatePassword extends React.Component {\n\n    /** First Constructor Call */\n    constructor(props) {\n        super(props);\n        this.state = {\n            oldPassword: '',\n            oldPasswordError: '',\n            newPassword: '',\n            newPasswordError: ''\n        }\n        this.handleChangeEvent = this.handleChangeEvent.bind(this);\n        this.UpdatePassword = this.UpdatePassword.bind(this);\n    }\n\n    /** onChange event  */\n    handleChangeEvent(event) {\n        event.preventDefault();\n        const state = this.state\n        state[event.target.name] = event.target.value;\n        this.setState(state);\n    }\n\n    /** validation of updatepassword form */\n    validate = () => {\n        let oldPasswordError = \"\";\n        let newPasswordError = \"\";\n\n        if (!this.state.oldPassword) {\n            oldPasswordError = \"please enter old password\";\n        }\n\n        if (!this.state.newPassword) {\n            newPasswordError = \"please enter new password\";\n        }\n\n        if (oldPasswordError || newPasswordError) {\n            this.setState({oldPasswordError, newPasswordError });\n            return false;\n        }\n        return true;\n    };\n\n\n    /** Update Password */\n    UpdatePassword() {\n        const isValid = this.validate();\n        if (isValid) {\n            console.log(this.state);\n            this.setState({\n                email: '',\n                emailError: '',\n                oldPassword: '',\n                oldPasswordError: '',\n                newPassword: '',\n                newPasswordError: '',\n                confirmPassword: '',\n                confirmPasswordError: ''\n            })\n        };\n\n        if (this.state.email && this.state.oldPassword && this.state.newPassword && this.state.confirmPassword) {\n            const obj = {\n                email: this.state.email,\n                oldPassword: this.state.oldPassword,\n                newPassword: this.state.newPassword,\n                confirmPassword: this.state.confirmPassword\n            }\n            API.UpdatePasswordUser(obj).\n                then((findresponse) => {\n                    console.log(\"response==\", findresponse);\n                    Swal.fire(\"Password Update Succesfully!\", \"\", \"success\");\n                    history.push('../home');\n                }).catch({ status: 500, message: 'Internal Server Error' });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <MDBContainer>\n                    <MDBRow>\n                        <form>\n                            <p className=\"h4 text-center mb-4\">UpdatePassword</p>\n                            <label className=\"grey-text\">\n                                email\n                            </label>\n                            <input\n                                type=\"email\"\n                                name=\"email\"\n                                id=\"defaultFormRegisterEmailEx1\"\n                                className=\"form-control\"\n                                value={this.state.email}\n                                onChange={this.handleChangeEvent}\n\n                            />\n                            <div style={{ fontSize: 12, color: \"red\" }}>\n                                {this.state.emailError}\n                            </div>\n                            <br />\n                            <label\n\n                                className=\"grey-text\"\n                            >\n                                Your old password\n                            </label>\n                            <input\n                                type=\"password\"\n                                name=\"oldPassword\"\n                                id=\"defaultFormRegisterPasswordEx2\"\n                                className=\"form-control\"\n                                value={this.state.oldPassword}\n                                onChange={this.handleChangeEvent}\n                            />\n                            <div style={{ fontSize: 12, color: \"red\" }}>\n                                {this.state.oldPasswordError}\n                            </div>\n                            <label\n\n                                className=\"grey-text\"\n                            >\n                                Your new password\n                            </label>\n                            <input\n                                type=\"password\"\n                                name=\"newPassword\"\n                                id=\"defaultFormRegisterPasswordEx3\"\n                                className=\"form-control\"\n                                value={this.state.newPassword}\n                                onChange={this.handleChangeEvent}\n                            />\n                            <div style={{ fontSize: 12, color: \"red\" }}>\n                                {this.state.newPasswordError}\n                            </div>\n                            <label\n                                className=\"grey-text\"\n                            >\n                                Your confirm password\n                            </label>\n                            <input\n                                type=\"password\"\n                                name=\"confirmPassword\"\n                                id=\"defaultFormRegisterPasswordEx4\"\n                                className=\"form-control\"\n                                value={this.state.confirmPassword}\n                                onChange={this.handleChangeEvent}\n                            />\n                            <div style={{ fontSize: 12, color: \"red\" }}>\n                                {this.state.confirmPasswordError}\n                            </div>\n                            <div className=\"text-center mt-4\">\n                                <MDBBtn color=\"unique\" onClick={this.UpdatePassword} disabled={!this.state.email}>\n                                    Update Password\n                                </MDBBtn>\n                            </div>\n                        </form>\n                    </MDBRow>\n                </MDBContainer>\n            </div>\n        );\n    }\n}\n\nexport default UpdatePassword;\n"]},"metadata":{},"sourceType":"module"}