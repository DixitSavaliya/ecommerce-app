{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ecommerce-app/src/Component/checkout/checkout.js\";\nimport React from 'react';\nimport API from '../../service/homeservice';\nimport './checkout.css';\n\nclass Checkout extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let firstNameError = '';\n      let lastNameError = '';\n      let emailError = '';\n      let mobileNumberError = '';\n      let address_1Error = '';\n      let cityError = '';\n      let zoneError = '';\n      let pincodeError = '';\n      let countryError = '';\n\n      if (!this.state.firstName) {\n        firstNameError = \"please enter firstName name\";\n      }\n\n      if (!this.state.lastName) {\n        lastNameError = \"please enter lastNameError name\";\n      }\n\n      const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      if (!reg.test(this.state.email)) {\n        emailError = \"invalid email\";\n      }\n\n      if (!this.state.mobileNumber) {\n        mobileNumberError = \"please enter phone number\";\n      }\n\n      if (!this.state.address_1) {\n        address_1Error = \"please enter address\";\n      }\n\n      if (!this.state.city) {\n        cityError = \"please enter  city\";\n      }\n\n      if (!this.state.pincode) {\n        pincodeError = \"please enter pincode\";\n      }\n\n      if (!this.state.zone) {\n        zoneError = \"please select state\";\n      }\n\n      if (!this.state.country) {\n        countryError = \"please select country\";\n      }\n\n      if (firstNameError || lastNameError || emailError || mobileNumberError || address_1Error || cityError || pincodeError || zoneError || countryError) {\n        this.setState({\n          firstNameError,\n          lastNameError,\n          emailError,\n          mobileNumberError,\n          address_1Error,\n          cityError,\n          pincodeError,\n          zoneError,\n          countryError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.state = {\n      getProfileList: [],\n      countryList: [],\n      zoneList: [],\n      firstName: '',\n      firstNameError: '',\n      lastName: '',\n      lastNameError: '',\n      email: '',\n      emailError: '',\n      mobileNumber: '',\n      mobileNumberError: '',\n      address_1: '',\n      address_1Error: '',\n      address_2: '',\n      city: '',\n      cityError: '',\n      zone: '',\n      zoneError: '',\n      pincode: '',\n      pincodeError: '',\n      country: '',\n      countryError: ''\n    };\n    this.productDetails = this.props.location.state.name;\n    console.log(\"data\", this.productDetails);\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeCountry = this.handleChangeCountry.bind(this);\n    this.Checkout = this.Checkout.bind(this);\n  }\n\n  componentDidMount() {\n    API.getCountryList().then(findresponse => {\n      // console.log(\"getCountryList response===\", findresponse);\n      this.setState({\n        countryList: findresponse.data.data\n      });\n      console.log(\"countryList==\", this.state.countryList);\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n    API.getZoneList().then(findresponse => {\n      console.log(\"getZoneList response===\", findresponse);\n      this.setState({\n        zoneList: findresponse.data.data\n      });\n      console.log(\"data==\", this.state.zoneList);\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n    API.getProfile().then(findresponse => {\n      // console.log(\"getProfile response===\", findresponse);\n      this.setState({\n        getProfileList: findresponse.data.data\n      });\n      console.log(\"data==\", this.state.getProfileList);\n      this.setState({\n        firstName: this.state.getProfileList.firstName,\n        email: this.state.getProfileList.email,\n        mobileNumber: this.state.getProfileList.mobileNumber\n      });\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n\n  handleChangeName(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      zone: event.target.value\n    });\n  }\n\n  handleChangeCountry(event) {\n    this.setState({\n      country: event.target.value\n    });\n  }\n\n  Checkout() {\n    const isValid = this.validate();\n\n    if (isValid) {\n      console.log(this.state);\n      this.setState({\n        firstName: '',\n        firstNameError: '',\n        lastName: '',\n        lastNameError: '',\n        email: '',\n        emailError: '',\n        mobileNumber: '',\n        mobileNumberError: '',\n        address_1: '',\n        address_1Error: '',\n        address_2: '',\n        city: '',\n        cityError: '',\n        zone: '',\n        zoneError: '',\n        pincode: '',\n        pincodeError: '',\n        country: '',\n        countryError: ''\n      });\n    }\n\n    ;\n    const obj = {\n      productDetails: this.productDetails,\n      shippingFirstName: this.state.firstName,\n      emailId: this.state.email,\n      phoneNumber: this.state.mobileNumber,\n      shippingLastName: this.state.lastName,\n      shippingAddress_1: this.state.address_1,\n      shippingAddress_2: this.state.address_2,\n      shippingCity: this.state.city,\n      shippingZone: this.state.zone,\n      shippingPostCode: this.state.pincode,\n      shippingCountry: this.state.country\n    };\n    API.checkoutListOrder(obj).then(findresponse => {\n      console.log(\"checkoutListOrder response===\", findresponse);\n      window.location.href = '/home';\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"First name:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"firstName\",\n      value: this.state.firstName,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, this.state.firstNameError), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), \"Last name:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"lastName\",\n      value: this.state.lastName,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, this.state.lastNameError), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), \"Address_1:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      rows: \"4\",\n      cols: \"50\",\n      name: \"address_1\",\n      value: this.state.address_1,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, this.state.address_1Error), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), \"Address_2:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      rows: \"4\",\n      cols: \"50\",\n      name: \"address_2\",\n      value: this.state.address_2,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), \"Country:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"shippingCountry\",\n      onChange: this.handleChangeCountry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, this.state.countryList.map((e, key) => {\n      return React.createElement(\"option\", {\n        key: key,\n        value: e.countryId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, e.name);\n    })), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, this.state.countryError), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), \"Phone Number:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"phoneNumber\",\n      value: this.state.mobileNumber,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, this.state.mobileNumberError), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }), \"Email:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"emailId\",\n      value: this.state.email,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, this.state.emailError), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), \"City:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"city\",\n      value: this.state.city,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, this.state.cityError), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), \"Zone:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      name: \"shippingZone\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, this.state.zoneList.map((e, key) => {\n      return React.createElement(\"option\", {\n        key: key,\n        value: e.zoneId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, e.name);\n    })), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, this.state.zoneError), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), \"PinCode:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"pincode\",\n      value: this.state.pincode,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, this.state.pincodeError), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.Checkout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default Checkout;","map":{"version":3,"sources":["/var/www/html/ecommerce-app/src/Component/checkout/checkout.js"],"names":["React","API","Checkout","Component","constructor","props","validate","firstNameError","lastNameError","emailError","mobileNumberError","address_1Error","cityError","zoneError","pincodeError","countryError","state","firstName","lastName","reg","test","email","mobileNumber","address_1","city","pincode","zone","country","setState","getProfileList","countryList","zoneList","address_2","productDetails","location","name","console","log","handleChangeName","bind","handleChange","handleChangeCountry","componentDidMount","getCountryList","then","findresponse","data","catch","status","message","getZoneList","getProfile","event","target","value","isValid","obj","shippingFirstName","emailId","phoneNumber","shippingLastName","shippingAddress_1","shippingAddress_2","shippingCity","shippingZone","shippingPostCode","shippingCountry","checkoutListOrder","window","href","render","fontSize","color","map","e","key","countryId","zoneId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport API from '../../service/homeservice';\nimport './checkout.css';\n\nclass Checkout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            getProfileList: [],\n            countryList: [],\n            zoneList: [],\n            firstName: '',\n            firstNameError: '',\n            lastName: '',\n            lastNameError: '',\n            email: '',\n            emailError: '',\n            mobileNumber: '',\n            mobileNumberError: '',\n            address_1: '',\n            address_1Error: '',\n            address_2: '',\n            city: '',\n            cityError: '',\n            zone: '',\n            zoneError: '',\n            pincode: '',\n            pincodeError: '',\n            country: '',\n            countryError: ''\n\n        }\n        this.productDetails = this.props.location.state.name;\n        console.log(\"data\", this.productDetails);\n        this.handleChangeName = this.handleChangeName.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeCountry = this.handleChangeCountry.bind(this);\n        this.Checkout = this.Checkout.bind(this);\n    }\n\n    componentDidMount() {\n\n        API.getCountryList().\n            then((findresponse) => {\n                // console.log(\"getCountryList response===\", findresponse);\n                this.setState({ countryList: findresponse.data.data })\n                console.log(\"countryList==\", this.state.countryList);\n\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n\n\n        API.getZoneList().\n            then((findresponse) => {\n                console.log(\"getZoneList response===\", findresponse);\n                this.setState({ zoneList: findresponse.data.data })\n                console.log(\"data==\", this.state.zoneList);\n\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n\n        API.getProfile().\n            then((findresponse) => {\n                // console.log(\"getProfile response===\", findresponse);\n                this.setState({ getProfileList: findresponse.data.data })\n                console.log(\"data==\", this.state.getProfileList);\n                this.setState({\n                    firstName: this.state.getProfileList.firstName,\n                    email: this.state.getProfileList.email,\n                    mobileNumber: this.state.getProfileList.mobileNumber\n                });\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n    }\n\n    validate = () => {\n        let firstNameError = '';\n        let lastNameError = '';\n        let emailError = '';\n        let mobileNumberError = '';\n        let address_1Error = '';\n        let cityError = '';\n        let zoneError = '';\n        let pincodeError = '';\n        let countryError = '';\n\n        if (!this.state.firstName) {\n            firstNameError = \"please enter firstName name\";\n        }\n\n        if (!this.state.lastName) {\n            lastNameError = \"please enter lastNameError name\";\n        }\n\n        const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        if (!reg.test(this.state.email)) {\n            emailError = \"invalid email\";\n        }\n\n        if (!this.state.mobileNumber) {\n            mobileNumberError = \"please enter phone number\";\n        }\n\n        if (!this.state.address_1) {\n            address_1Error = \"please enter address\";\n        }\n\n        if (!this.state.city) {\n            cityError = \"please enter  city\";\n        }\n\n        if (!this.state.pincode) {\n            pincodeError = \"please enter pincode\";\n        }\n\n        if (!this.state.zone) {\n            zoneError = \"please select state\";\n        }\n\n        if (!this.state.country) {\n            countryError = \"please select country\";\n        }\n\n        if (firstNameError || lastNameError || emailError || mobileNumberError || address_1Error || cityError || pincodeError || zoneError || countryError) {\n            this.setState({ firstNameError, lastNameError, emailError, mobileNumberError, address_1Error, cityError, pincodeError, zoneError, countryError });\n            return false;\n        }\n        return true;\n    };\n\n    handleChangeName(event) {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleChange(event) {\n        this.setState({ zone: event.target.value })\n    }\n\n    handleChangeCountry(event) {\n        this.setState({ country: event.target.value })\n    }\n\n    Checkout() {\n        const isValid = this.validate();\n        if (isValid) {\n            console.log(this.state);\n            this.setState({\n                firstName: '',\n                firstNameError: '',\n                lastName: '',\n                lastNameError: '',\n                email: '',\n                emailError: '',\n                mobileNumber: '',\n                mobileNumberError: '',\n                address_1: '',\n                address_1Error: '',\n                address_2: '',\n                city: '',\n                cityError: '',\n                zone: '',\n                zoneError: '',\n                pincode: '',\n                pincodeError: '',\n                country: '',\n                countryError: ''\n            })\n        };\n        const obj = {\n            productDetails: this.productDetails,\n            shippingFirstName: this.state.firstName,\n            emailId: this.state.email,\n            phoneNumber: this.state.mobileNumber,\n            shippingLastName: this.state.lastName,\n            shippingAddress_1: this.state.address_1,\n            shippingAddress_2: this.state.address_2,\n            shippingCity: this.state.city,\n            shippingZone: this.state.zone,\n            shippingPostCode: this.state.pincode,\n            shippingCountry: this.state.country\n\n        }\n\n        API.checkoutListOrder(obj).\n            then((findresponse) => {\n                console.log(\"checkoutListOrder response===\", findresponse);\n                window.location.href = '/home';\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n    }\n\n    render() {\n        return (\n            <div>\n                <form className=\"center\">\n                    First name:<br />\n                    <input type=\"text\" name=\"firstName\" value={this.state.firstName}\n                        onChange={this.handleChangeName} />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.firstNameError}\n                    </div>\n                    <br />\n                    Last name:<br />\n                    <input type=\"text\" name=\"lastName\" value={this.state.lastName}\n                        onChange={this.handleChangeName} />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.lastNameError}\n                    </div>\n                    <br />\n                    Address_1:<br />\n                    <textarea rows=\"4\" cols=\"50\" name=\"address_1\" value={this.state.address_1} onChange={this.handleChangeName}>\n\n                    </textarea>\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.address_1Error}\n                    </div>\n                    <br />\n                    Address_2:<br />\n                    <textarea rows=\"4\" cols=\"50\" name=\"address_2\" value={this.state.address_2} onChange={this.handleChangeName}>\n\n                    </textarea>\n                    <br />\n                    Country:<br />\n                    <select name=\"shippingCountry\" onChange={this.handleChangeCountry}>\n                        {this.state.countryList.map((e, key) => {\n                            return <option key={key} value={e.countryId}>{e.name}</option>;\n                        })}\n                    </select>\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.countryError}\n                    </div>\n                    <br />\n                    Phone Number:<br />\n                    <input type=\"text\" name=\"phoneNumber\" value={this.state.mobileNumber}\n                        onChange={this.handleChangeName} />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.mobileNumberError}\n                    </div>\n                    <br />\n                    Email:<br />\n                    <input type=\"text\" name=\"emailId\" value={this.state.email}\n                        onChange={this.handleChangeName} />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.emailError}\n                    </div>\n\n                    <br />\n                    City:<br />\n                    <input type=\"text\" name=\"city\" value={this.state.city}\n                        onChange={this.handleChangeName} />\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.cityError}\n                    </div>\n                    <br />\n                    Zone:<br />\n                    <select name=\"shippingZone\" onChange={this.handleChange}>\n                        {this.state.zoneList.map((e, key) => {\n                            return <option key={key} value={e.zoneId}>{e.name}</option>;\n                        })}\n                    </select>\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.zoneError}\n                    </div>\n                    <br />\n                    PinCode:<br />\n                    <input type=\"text\" name=\"pincode\" value={this.state.pincode}\n                        onChange={this.handleChangeName} />\n                         <div style={{ fontSize: 12, color: \"red\" }}>\n                        {this.state.pincodeError}\n                    </div>\n                    <br />\n                    <button type=\"button\" onClick={this.Checkout} >Submit</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}