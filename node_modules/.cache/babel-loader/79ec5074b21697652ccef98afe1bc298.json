{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ecommerce-app/src/Component/orderdetail/orderdetail.js\";\nimport React from 'react';\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\nimport './orderdetail.css';\n\nclass OrderDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderDetailsList: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"query=\", this.props.location.pathname.split('/')[2]);\n    const orderId = this.props.location.pathname.split('/')[2];\n    API.getOrderDetails(orderId).then(findresponse => {\n      console.log(\"getOrderHistory response===\", findresponse);\n      this.setState({\n        orderDetailsList: findresponse.data.data\n      });\n      console.log(\"data==\", this.state.orderDetailsList);\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n\n  render() {\n    let displayData;\n    let displayProduct;\n    let totalamount;\n    if (this.state.orderDetailsList) displayData = this.state.orderDetailsList.map(data => React.createElement(MDBCardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, data.shippingAddress1, \" \", data.shippingAddress2), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Phone: \", data.telephone)));\n    if (this.state.orderDetailsList[0]) displayProduct = this.state.orderDetailsList[0].productList.map(data => React.createElement(MDBCardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, data.name), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-rupee-sign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), \" \", data.productDetail.price), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, data.quantity), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-rupee-sign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), \" \", data.total)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })));\n    if (this.state.orderDetailsList) totalamount = this.state.orderDetailsList.map(data => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Total Amount:\", data.total));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      style: {\n        width: \"22rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Shipping Adreess\"), displayData))), React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      style: {\n        width: \"22rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Billing Adreess\"), displayData)))), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Products\"), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Price\"), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Qty\"), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Total\"))), React.createElement(MDBCardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, displayProduct))))), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(MDBCol, {\n      md: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, totalamount)))));\n  }\n\n}\n\nexport default OrderDetail;","map":{"version":3,"sources":["/var/www/html/ecommerce-app/src/Component/orderdetail/orderdetail.js"],"names":["React","API","MDBContainer","MDBRow","MDBBtn","MDBCard","MDBCardBody","MDBCardImage","MDBCardTitle","MDBCardText","MDBCol","OrderDetail","Component","constructor","props","state","orderDetailsList","componentDidMount","console","log","location","pathname","split","orderId","getOrderDetails","then","findresponse","setState","data","catch","status","message","render","displayData","displayProduct","totalamount","map","shippingAddress1","shippingAddress2","telephone","productList","name","productDetail","price","quantity","total","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\nimport './orderdetail.css';\n\nclass OrderDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            orderDetailsList: []\n        }\n    }\n\n\n    componentDidMount() {\n        console.log(\"query=\", this.props.location.pathname.split('/')[2]);\n        const orderId = this.props.location.pathname.split('/')[2];\n        API.getOrderDetails(orderId).\n            then((findresponse) => {\n                console.log(\"getOrderHistory response===\", findresponse);\n                this.setState({ orderDetailsList: findresponse.data.data })\n                console.log(\"data==\", this.state.orderDetailsList);\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n    }\n\n    render() {\n        let displayData;\n        let displayProduct;\n        let totalamount;\n\n        if (this.state.orderDetailsList) displayData = this.state.orderDetailsList.map(data =>\n            <MDBCardText>\n                <span>{data.shippingAddress1} {data.shippingAddress2}</span>\n                <p>Phone: {data.telephone}</p>\n            </MDBCardText>\n\n        )\n\n        if(this.state.orderDetailsList[0]) displayProduct = this.state.orderDetailsList[0].productList.map(data =>\n            <MDBCardText>\n            <MDBRow>\n            <MDBCol md=\"3\">{data.name}</MDBCol>\n            <MDBCol md=\"3\"><i class=\"fas fa-rupee-sign\"></i> {data.productDetail.price}</MDBCol>\n            <MDBCol md=\"3\">{data.quantity}</MDBCol>\n             <MDBCol md=\"3\"><i class=\"fas fa-rupee-sign\"></i> {data.total}</MDBCol>\n           </MDBRow>\n           <br/>\n        </MDBCardText>\n            )\n\n            if (this.state.orderDetailsList) totalamount = this.state.orderDetailsList.map(data =>\n                    <p>Total Amount:{data.total}</p>\n            )\n\n        return (\n            <div>\n                <MDBContainer>\n                    <MDBRow>\n                        <MDBCol md=\"6\">\n                            <MDBCard style={{ width: \"22rem\" }}>\n                                <MDBCardBody>\n                                    <MDBCardTitle>Shipping Adreess</MDBCardTitle>\n                                    {displayData}\n\n                                </MDBCardBody>\n                            </MDBCard>\n                        </MDBCol>\n                        <MDBCol md=\"6\">\n                            <MDBCard style={{ width: \"22rem\" }}>\n                                <MDBCardBody>\n                                    <MDBCardTitle>Billing Adreess</MDBCardTitle>\n                                    {displayData}\n\n                                </MDBCardBody>\n                            </MDBCard>\n                        </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                    <MDBCol>\n                    <MDBCard>\n                        <MDBCardBody>                        \n                            <MDBCardTitle>\n                                <MDBRow>\n                                    <MDBCol md=\"3\">Products</MDBCol>\n                                    <MDBCol md=\"3\">Price</MDBCol>\n                                    <MDBCol md=\"3\">Qty</MDBCol>\n                                    <MDBCol md=\"3\">Total</MDBCol>\n                                </MDBRow>\n                            </MDBCardTitle>\n                            <MDBCardText>\n                               {displayProduct}\n                            </MDBCardText>\n                        </MDBCardBody>\n                    </MDBCard>\n                </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                    <MDBCol md=\"8\">\n                    </MDBCol>\n                    <MDBCol md=\"4\">\n                    <MDBCardTitle>\n                    {totalamount}\n                    </MDBCardTitle>\n                    </MDBCol>\n                    </MDBRow>\n                </MDBContainer>\n            </div>\n        );\n    }\n}\n\nexport default OrderDetail;\n"]},"metadata":{},"sourceType":"module"}