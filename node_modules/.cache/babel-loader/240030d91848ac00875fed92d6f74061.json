{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ecommerce-app/src/Component/login/login.js\";\nimport React from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport { Link } from 'react-router-dom';\nimport './login.css';\n\nclass Login extends React.Component {\n  /** First Constructor Call */\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let passwordError = \"\";\n      let emailIdError = \"\";\n      const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      if (!reg.test(this.state.emailId)) {\n        emailIdError = \"invalid email\";\n      }\n\n      if (!this.state.password) {\n        passwordError = \"please enter password\";\n      }\n\n      if (userNameError || passwordError) {\n        this.setState({\n          userNameError,\n          passwordError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.state = {\n      password: '',\n      passwordError: '',\n      emailId: '',\n      emailIdError: ''\n    };\n    this.login = this.login.bind(this);\n    this.handleChangeEvent = this.handleChangeEvent.bind(this);\n  }\n  /** onChange event  */\n\n\n  handleChangeEvent(event) {\n    event.preventDefault();\n    const state = this.state;\n    state[event.target.name] = event.target.value;\n    this.setState(state);\n  }\n  /** validation of login form */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"emailId\",\n      className: \"form-control\",\n      value: this.state.emailId,\n      onChange: this.handleChangeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.emailIdError), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Your password\"), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChangeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.passwordError)), React.createElement(\"div\", {\n      className: \"text-center mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"indigo\",\n      onClick: this.login,\n      disabled: !this.state.emailId && !this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Login\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/forgotpassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Forgot password?\"))), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Create new account\"))))))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/var/www/html/ecommerce-app/src/Component/login/login.js"],"names":["React","MDBContainer","MDBRow","MDBCol","MDBBtn","Link","Login","Component","constructor","props","validate","passwordError","emailIdError","reg","test","state","emailId","password","userNameError","setState","login","bind","handleChangeEvent","event","preventDefault","target","name","value","render","fontSize","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport { Link } from 'react-router-dom';\nimport './login.css';\n\nclass Login extends React.Component {\n\n    /** First Constructor Call */\n    constructor(props) {\n        super(props);\n        this.state = {\n            password: '',\n            passwordError: '',\n            emailId: '',\n            emailIdError: '',\n        }\n        this.login = this.login.bind(this);\n        this.handleChangeEvent = this.handleChangeEvent.bind(this);\n    }\n\n     /** onChange event  */\n  handleChangeEvent(event) {\n    event.preventDefault();\n    const state = this.state\n    state[event.target.name] = event.target.value;\n    this.setState(state);\n  }\n\n  /** validation of login form */\n  validate = () => {\n    let passwordError = \"\";\n    let emailIdError = \"\";\n\n   \n    const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (!reg.test(this.state.emailId)) {\n        emailIdError = \"invalid email\";\n    }\n\n\n    if (!this.state.password) {\n      passwordError = \"please enter password\";\n    }\n\n    if (userNameError || passwordError) {\n      this.setState({ userNameError, passwordError });\n      return false;\n    }\n    return true;\n  };\n\n\n\n    render() {\n        return (\n            <div>\n                <MDBContainer>\n                    <MDBRow>\n                        <form>\n                            <p>Sign in</p>\n                            <div>\n                                <label className=\"grey-text\">\n                                    Email\n           \t\t\t\t\t\t </label>\n                                <input\n                                    type=\"email\"\n                                    name=\"emailId\"\n                                    className=\"form-control\"\n                                    value={this.state.emailId}\n                                    onChange={this.handleChangeEvent}\n                                />\n                                <div style={{ fontSize: 12, color: \"red\" }}>\n                                    {this.state.emailIdError}\n                                </div>\n                                <br />\n                            </div>\n                            <div>\n                                <label\n                                    className=\"grey-text\"\n                                >\n                                    Your password\n          \t\t\t</label>\n                                <input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    name=\"password\"\n                                    value={this.state.password}\n                                    onChange={this.handleChangeEvent}\n                                />\n                                <div style={{ fontSize: 12, color: \"red\" }}>\n                                    {this.state.passwordError}\n                                </div>\n                            </div>\n                            <div className=\"text-center mt-4\">\n                                <MDBBtn color=\"indigo\" onClick={this.login} disabled={!this.state.emailId && !this.state.password}>Login</MDBBtn>\n                            </div>\n                            <div>\n                                <span>\n                                    <p><Link to=\"/forgotpassword\">Forgot password?</Link></p>\n                                </span>\n                                <span>\n                                    <p><Link to=\"/signup\">Create new account</Link></p>\n                                </span>\n                            </div>\n                        </form>\n                    </MDBRow>\n                </MDBContainer>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}