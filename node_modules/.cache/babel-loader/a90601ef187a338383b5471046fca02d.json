{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ecommerce-app/src/Component/address/address.js\";\nimport React from 'react';\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard, MDBCardBody, MDBCardTitle, MDBCardText } from 'mdbreact';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport Swal from 'sweetalert2';\nimport Header from '../../Component/home/header/header';\nimport './address.css';\n\nclass Address extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      getProfileList: [],\n      addressList: [],\n      id: '',\n      address_1: '',\n      address_1Error: '',\n      address_2: '',\n      city: '',\n      cityError: '',\n      state: '',\n      stateError: '',\n      pincode: '',\n      pincodeError: '',\n      address: ''\n    };\n    this.getAddress = this.getAddress.bind(this);\n  }\n  /** Intially call  */\n\n\n  componentDidMount() {\n    /** Get Profile */\n    API.getProfile().then(findresponse => {\n      console.log(\"getProfile response===\", findresponse);\n      this.setState({\n        getProfileList: findresponse.data.data\n      });\n      console.log(\"data==\", this.state.getProfileList);\n      this.setState({\n        id: this.state.getProfileList.id\n      });\n      this.getAddress(this.state.id);\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n  /** \n  * @param {string} id\n  * get address\n  */\n\n\n  getAddress(id) {\n    console.log(\"id===\", id);\n    /** Get Address */\n\n    API.getAddress(id).then(findresponse => {\n      console.log(\"getAddress response===\", findresponse);\n      this.setState({\n        addressList: findresponse.data.data\n      });\n      console.log(\"addressList[[[[[[===---\", this.state.addressList);\n      this.setState({\n        address: this.state.addressList.addressId\n      });\n      console.log(\"addressid===\", this.state.address);\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n  /** \n  * @param {string} data\n  * delete address\n  */\n\n\n  deleteaddress(data) {\n    const deletedata = data.addressId;\n    console.log(\"delete\", deletedata);\n    /** Delete address */\n\n    API.deleteAddress(deletedata).then(findresponse => {\n      console.log(\"deleteAddress response===\", findresponse);\n      Swal.fire(\"Address Deleted Succesfully!\", \"\", \"success\");\n      this.componentDidMount();\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n\n  render() {\n    let displayData;\n    let displayAddress;\n    if (this.state.addressList) displayData = this.state.addressList.slice(0, Math.floor(this.state.addressList.length / 2)).map((data, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Address\"), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Address_1:\"), \" \", data.address1), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Address_2:\"), \" \", data.address2), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"City:\"), \" \", data.city), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Postcode:\"), \" \", data.postcode), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"State:\"), \" \", data.state)), React.createElement(MDBCol, {\n      md: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: {\n        pathname: \"/editaddress/\".concat(data.addressId),\n        state: {\n          name: data\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"i\", {\n      className: \"fas fa-trash\",\n      onClick: this.deleteaddress.bind(this, data),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })));\n    if (this.state.addressList) displayAddress = this.state.addressList.slice(Math.floor(this.state.addressList.length / 2)).map((data, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Address\"), React.createElement(MDBCardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Address_1:\"), \" \", data.address1), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Address_2:\"), \" \", data.address2), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"City:\"), \" \", data.city), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Postcode:\"), \" \", data.postcode), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"State:\"), \" \", data.state)), React.createElement(MDBCol, {\n      md: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: {\n        pathname: \"/editaddress/\".concat(data.addressId),\n        state: {\n          name: data\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(\"i\", {\n      class: \"fas fa-trash\",\n      onClick: this.deleteaddress.bind(this, data),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, displayData), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, displayAddress))), React.createElement(\"div\", {\n      className: \"text-center mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/addnewaddress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Add New Address\")))));\n  }\n\n}\n\nexport default Address;","map":{"version":3,"sources":["/var/www/html/ecommerce-app/src/Component/address/address.js"],"names":["React","API","MDBContainer","MDBRow","MDBCol","MDBBtn","MDBCard","MDBCardBody","MDBCardTitle","MDBCardText","BrowserRouter","Router","Route","Link","Grid","Swal","Header","Address","Component","constructor","props","state","getProfileList","addressList","id","address_1","address_1Error","address_2","city","cityError","stateError","pincode","pincodeError","address","getAddress","bind","componentDidMount","getProfile","then","findresponse","console","log","setState","data","catch","status","message","addressId","deleteaddress","deletedata","deleteAddress","fire","render","displayData","displayAddress","slice","Math","floor","length","map","index","address1","address2","postcode","pathname","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard, MDBCardBody, MDBCardTitle, MDBCardText } from 'mdbreact';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport Swal from 'sweetalert2';\nimport Header from '../../Component/home/header/header';\nimport './address.css';\n\nclass Address extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            getProfileList: [],\n            addressList: [],\n            id: '',\n            address_1: '',\n            address_1Error: '',\n            address_2: '',\n            city: '',\n            cityError: '',\n            state: '',\n            stateError: '',\n            pincode: '',\n            pincodeError: '',\n            address: ''\n        }\n        this.getAddress = this.getAddress.bind(this);\n    }\n\n    /** Intially call  */\n    componentDidMount() {\n        /** Get Profile */\n        API.getProfile().\n            then((findresponse) => {\n                console.log(\"getProfile response===\", findresponse);\n                this.setState({ getProfileList: findresponse.data.data })\n                console.log(\"data==\", this.state.getProfileList);\n                this.setState({\n                    id: this.state.getProfileList.id\n                });\n                this.getAddress(this.state.id);\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n    }\n\n\n    /** \n    * @param {string} id\n    * get address\n    */\n    getAddress(id) {\n        console.log(\"id===\", id);\n        /** Get Address */\n        API.getAddress(id).\n            then((findresponse) => {\n                console.log(\"getAddress response===\", findresponse);\n                this.setState({ addressList: findresponse.data.data });\n                console.log(\"addressList[[[[[[===---\", this.state.addressList);\n                this.setState({ address: this.state.addressList.addressId });\n                console.log(\"addressid===\", this.state.address);\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n    }\n\n\n    /** \n    * @param {string} data\n    * delete address\n    */\n    deleteaddress(data) {\n        const deletedata = data.addressId;\n        console.log(\"delete\", deletedata);\n        /** Delete address */\n        API.deleteAddress(deletedata).\n            then((findresponse) => {\n                console.log(\"deleteAddress response===\", findresponse);\n                Swal.fire(\"Address Deleted Succesfully!\", \"\", \"success\");\n                this.componentDidMount();\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n    }\n\n    render() {\n        let displayData;\n        let displayAddress;\n\n        if (this.state.addressList) displayData = this.state.addressList.slice(0, Math.floor(this.state.addressList.length / 2)).map((data,index) =>\n            <div key={index}>\n                <MDBCard>\n                    <MDBCardBody>\n                        <MDBCardTitle>Address</MDBCardTitle>\n                     \n                            <MDBRow>\n                                <MDBCol md=\"8\">\n                                    <p><b>Address_1:</b> {data.address1}</p>\n                                    <p><b>Address_2:</b> {data.address2}</p>\n                                    <p><b>City:</b> {data.city}</p>\n                                    <p><b>Postcode:</b> {data.postcode}</p>\n                                    <p><b>State:</b> {data.state}</p>\n                                </MDBCol>\n                                <MDBCol md=\"4\">\n                                    <Link to={{ pathname: `/editaddress/${data.addressId}`, state: { name: data } }}><i class=\"fas fa-edit\"></i></Link>\n                                    <i className=\"fas fa-trash\" onClick={this.deleteaddress.bind(this, data)}></i>\n                                </MDBCol>\n                            </MDBRow>\n                      \n                    </MDBCardBody>\n                </MDBCard>\n                <br />\n            </div>\n        )\n\n        if (this.state.addressList) displayAddress = this.state.addressList.slice(Math.floor(this.state.addressList.length / 2)).map((data,index) =>\n            <div key={index}>\n                <MDBCard>\n                    <MDBCardBody>\n                        <MDBCardTitle>Address</MDBCardTitle>\n                        <MDBCardText>\n                            <MDBRow>\n                                <MDBCol md=\"8\">\n                                    <p><b>Address_1:</b> {data.address1}</p>\n                                    <p><b>Address_2:</b> {data.address2}</p>\n                                    <p><b>City:</b> {data.city}</p>\n                                    <p><b>Postcode:</b> {data.postcode}</p>\n                                    <p><b>State:</b> {data.state}</p>\n                                </MDBCol>\n                                <MDBCol md=\"4\">\n                                    <Link to={{ pathname: `/editaddress/${data.addressId}`, state: { name: data } }}><i class=\"fas fa-edit\"></i></Link>\n                                    <i class=\"fas fa-trash\" onClick={this.deleteaddress.bind(this, data)}></i>\n                                </MDBCol>\n                            </MDBRow>\n                        </MDBCardText>\n                    </MDBCardBody>\n                </MDBCard>\n                <br />\n            </div>\n        )\n        return (\n            <div>\n                <Header />\n                <MDBContainer>\n                    <MDBRow>\n                        <Grid container spacing={0}>\n                            <Grid item xs={12} sm={6}>\n                                {displayData}\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                {displayAddress}\n                            </Grid>\n                        </Grid>\n                    </MDBRow>\n                    <div className=\"text-center mt-4\">\n                        <Link to=\"/addnewaddress\"><MDBBtn color=\"primary\">\n                            Add New Address\n                        </MDBBtn></Link>\n                    </div>\n                </MDBContainer>\n            </div>\n        );\n    }\n}\n\nexport default Address;\n"]},"metadata":{},"sourceType":"module"}