{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ecommerce-app/src/Component/profile/profile.js\";\nimport React from 'react';\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Header from '../home/header/header';\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let emailIdError = \"\";\n      let mobileNumberError = \"\";\n      let firstNameError = \"\";\n\n      if (!this.state.firstName) {\n        firstNameError = \"please enter  name\";\n      }\n\n      const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      if (!reg.test(this.state.email)) {\n        emailIdError = \"invalid email\";\n      }\n\n      const phone = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n\n      if (!phone.test(this.state.mobileNumber)) {\n        mobileNumberError = \"please enter valid number\";\n      }\n\n      if (emailIdError || mobileNumberError || firstNameError) {\n        this.setState({\n          emailIdError,\n          mobileNumberError,\n          firstNameError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.state = {\n      getProfileList: [],\n      addressList: [],\n      id: '',\n      firstName: '',\n      firstNameError: '',\n      email: '',\n      emailIdError: '',\n      mobileNumber: '',\n      mobileNumberError: '',\n      address_1: '',\n      address_1Error: '',\n      address_2: '',\n      city: '',\n      cityError: '',\n      state: '',\n      stateError: '',\n      pincode: '',\n      pincodeError: ''\n    };\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.editProfile = this.editProfile.bind(this);\n  }\n  /** Intailly call */\n\n\n  componentDidMount() {\n    /** Get Profile */\n    API.getProfile().then(findresponse => {\n      console.log(\"getProfile response===\", findresponse);\n      this.setState({\n        getProfileList: findresponse.data.data\n      });\n      console.log(\"data==\", this.state.getProfileList);\n      this.setState({\n        firstName: this.state.getProfileList.firstName,\n        email: this.state.getProfileList.email,\n        mobileNumber: this.state.getProfileList.mobileNumber,\n        id: this.state.getProfileList.id\n      });\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n  /** Validation  */\n\n\n  /** \n  * @param {JSON} event\n  * handleChangeName\n  */\n  handleChangeName(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n  /** Edit profile */\n\n\n  editProfile() {\n    const isValid = this.validate();\n\n    if (isValid) {\n      console.log(this.state);\n      this.setState({\n        emailIdError: '',\n        mobileNumberError: '',\n        firstNameError: ''\n      });\n    }\n\n    ;\n\n    if (this.state.name && this.state.email && this.state.mobileNumber && this.state.mobileNumber.length == 10) {\n      const obj = {\n        firstName: this.state.firstName,\n        emailId: this.state.email,\n        phoneNumber: this.state.mobileNumber\n        /** Update Profile */\n\n      };\n      API.updateProfile(obj).then(findresponse => {\n        console.log(\"getProfile response===\", findresponse);\n      }).catch({\n        status: 500,\n        message: 'Internal Server Error'\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Your name\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"firstName\",\n      value: this.state.firstName,\n      onChange: this.handleChangeName,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.state.nameError), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Your email\"), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleChangeName,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, this.state.nameError), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Phone Number\"), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"mobileNumber\",\n      value: this.state.mobileNumber,\n      onChange: this.handleChangeName,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, this.state.nameError), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-center mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"unique\",\n      onClick: this.editProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Save\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/updatepassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"update password\"))))))))));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/var/www/html/ecommerce-app/src/Component/profile/profile.js"],"names":["React","API","MDBContainer","MDBRow","MDBCol","MDBBtn","BrowserRouter","Router","Route","Link","Header","Profile","Component","constructor","props","validate","emailIdError","mobileNumberError","firstNameError","state","firstName","reg","test","email","phone","mobileNumber","setState","getProfileList","addressList","id","address_1","address_1Error","address_2","city","cityError","stateError","pincode","pincodeError","handleChangeName","bind","editProfile","componentDidMount","getProfile","then","findresponse","console","log","data","catch","status","message","event","target","name","value","isValid","length","obj","emailId","phoneNumber","updateProfile","render","fontSize","color","nameError"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,2BAAhB;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,MAAvC,QAAqD,UAArD;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAGA,MAAMC,OAAN,SAAsBX,KAAK,CAACY,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA8CnBC,QA9CmB,GA8CR,MAAM;AACb,UAAIC,YAAY,GAAG,EAAnB;AACA,UAAIC,iBAAiB,GAAG,EAAxB;AACA,UAAIC,cAAc,GAAG,EAArB;;AAEA,UAAI,CAAC,KAAKC,KAAL,CAAWC,SAAhB,EAA2B;AACvBF,QAAAA,cAAc,GAAG,oBAAjB;AACH;;AAED,YAAMG,GAAG,GAAG,+CAAZ;;AACA,UAAI,CAACA,GAAG,CAACC,IAAJ,CAAS,KAAKH,KAAL,CAAWI,KAApB,CAAL,EAAiC;AAC7BP,QAAAA,YAAY,GAAG,eAAf;AACH;;AAED,YAAMQ,KAAK,GAAG,oDAAd;;AACA,UAAI,CAACA,KAAK,CAACF,IAAN,CAAW,KAAKH,KAAL,CAAWM,YAAtB,CAAL,EAA0C;AACtCR,QAAAA,iBAAiB,GAAG,2BAApB;AACH;;AAED,UAAID,YAAY,IAAIC,iBAAhB,IAAqCC,cAAzC,EAAyD;AACrD,aAAKQ,QAAL,CAAc;AAAEV,UAAAA,YAAF;AAAgBC,UAAAA,iBAAhB;AAAmCC,UAAAA;AAAnC,SAAd;AACA,eAAO,KAAP;AACH;;AACD,aAAO,IAAP;AACH,KAtEkB;;AAEf,SAAKC,KAAL,GAAa;AACTQ,MAAAA,cAAc,EAAE,EADP;AAETC,MAAAA,WAAW,EAAE,EAFJ;AAGTC,MAAAA,EAAE,EAAE,EAHK;AAITT,MAAAA,SAAS,EAAE,EAJF;AAKTF,MAAAA,cAAc,EAAC,EALN;AAMTK,MAAAA,KAAK,EAAE,EANE;AAOTP,MAAAA,YAAY,EAAE,EAPL;AAQTS,MAAAA,YAAY,EAAE,EARL;AASTR,MAAAA,iBAAiB,EAAE,EATV;AAUTa,MAAAA,SAAS,EAAE,EAVF;AAWTC,MAAAA,cAAc,EAAE,EAXP;AAYTC,MAAAA,SAAS,EAAE,EAZF;AAaTC,MAAAA,IAAI,EAAE,EAbG;AAcTC,MAAAA,SAAS,EAAE,EAdF;AAeTf,MAAAA,KAAK,EAAE,EAfE;AAgBTgB,MAAAA,UAAU,EAAE,EAhBH;AAiBTC,MAAAA,OAAO,EAAE,EAjBA;AAkBTC,MAAAA,YAAY,EAAE;AAlBL,KAAb;AAoBA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACH;AAED;;;AACAE,EAAAA,iBAAiB,GAAG;AAChB;AACAxC,IAAAA,GAAG,CAACyC,UAAJ,GACIC,IADJ,CACUC,YAAD,IAAkB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,YAAtC;AACA,WAAKlB,QAAL,CAAc;AAAEC,QAAAA,cAAc,EAAEiB,YAAY,CAACG,IAAb,CAAkBA;AAApC,OAAd;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAK3B,KAAL,CAAWQ,cAAjC;AACA,WAAKD,QAAL,CAAc;AACVN,QAAAA,SAAS,EAAE,KAAKD,KAAL,CAAWQ,cAAX,CAA0BP,SAD3B;AAEVG,QAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWQ,cAAX,CAA0BJ,KAFvB;AAGVE,QAAAA,YAAY,EAAE,KAAKN,KAAL,CAAWQ,cAAX,CAA0BF,YAH9B;AAIVI,QAAAA,EAAE,EAAE,KAAKV,KAAL,CAAWQ,cAAX,CAA0BE;AAJpB,OAAd;AAMH,KAXL,EAWOmB,KAXP,CAYQ;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAZR;AAcH;AAED;;;AA4BA;;;;AAIAZ,EAAAA,gBAAgB,CAACa,KAAD,EAAQ;AAAA,0BACIA,KAAK,CAACC,MADV;AAAA,UACZC,IADY,iBACZA,IADY;AAAA,UACNC,KADM,iBACNA,KADM;AAEpB,SAAK5B,QAAL,CAAc;AACV,OAAC2B,IAAD,GAAQC;AADE,KAAd;AAGH;AAED;;;AACAd,EAAAA,WAAW,GAAG;AACV,UAAMe,OAAO,GAAG,KAAKxC,QAAL,EAAhB;;AACA,QAAIwC,OAAJ,EAAa;AACTV,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3B,KAAjB;AACA,WAAKO,QAAL,CAAc;AACVV,QAAAA,YAAY,EAAE,EADJ;AAEVC,QAAAA,iBAAiB,EAAE,EAFT;AAGVC,QAAAA,cAAc,EAAC;AAHL,OAAd;AAKH;;AAAA;;AAED,QAAI,KAAKC,KAAL,CAAWkC,IAAX,IAAmB,KAAKlC,KAAL,CAAWI,KAA9B,IAAuC,KAAKJ,KAAL,CAAWM,YAAlD,IAAkE,KAAKN,KAAL,CAAWM,YAAX,CAAwB+B,MAAxB,IAAkC,EAAxG,EAA4G;AACxG,YAAMC,GAAG,GAAG;AACRrC,QAAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,SADd;AAERsC,QAAAA,OAAO,EAAE,KAAKvC,KAAL,CAAWI,KAFZ;AAGRoC,QAAAA,WAAW,EAAE,KAAKxC,KAAL,CAAWM;AAE5B;;AALY,OAAZ;AAMAxB,MAAAA,GAAG,CAAC2D,aAAJ,CAAkBH,GAAlB,EACId,IADJ,CACUC,YAAD,IAAkB;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,YAAtC;AACH,OAHL,EAGOI,KAHP,CAIQ;AAAEC,QAAAA,MAAM,EAAE,GAAV;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAJR;AAMH;AACJ;;AAEDW,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAII;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,WAFT;AAGI,MAAA,KAAK,EAAE,KAAK1C,KAAL,CAAWC,SAHtB;AAII,MAAA,QAAQ,EAAE,KAAKkB,gBAJnB;AAKI,MAAA,SAAS,EAAC,cALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAWO;AAAK,MAAA,KAAK,EAAE;AAAEwB,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF,KAAK5C,KAAL,CAAW6C,SADT,CAXP,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,EAeI;AAAO,MAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfJ,EAkBI;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAE,KAAK7C,KAAL,CAAWI,KAHtB;AAII,MAAA,QAAQ,EAAE,KAAKe,gBAJnB;AAKI,MAAA,SAAS,EAAC,cALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBJ,EAyBO;AAAK,MAAA,KAAK,EAAE;AAAEwB,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF,KAAK5C,KAAL,CAAW6C,SADT,CAzBP,EA4BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BJ,EA6BI;AACI,MAAA,SAAS,EAAC,WADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA7BJ,EAkCI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,IAAI,EAAC,cAFT;AAGI,MAAA,KAAK,EAAE,KAAK7C,KAAL,CAAWM,YAHtB;AAII,MAAA,QAAQ,EAAE,KAAKa,gBAJnB;AAKI,MAAA,SAAS,EAAC,cALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCJ,EAyCO;AAAK,MAAA,KAAK,EAAE;AAAEwB,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF,KAAK5C,KAAL,CAAW6C,SADT,CAzCP,EA4CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5CJ,EA6CI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,OAAO,EAAE,KAAKxB,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAH,CADJ,CADJ,CAJJ,CA7CJ,CADJ,CADJ,CADJ,CAHJ,CADJ;AAoEH;;AAtLiC;;AAyLtC,eAAe7B,OAAf","sourcesContent":["import React from 'react';\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Header from '../home/header/header';\n\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            getProfileList: [],\n            addressList: [],\n            id: '',\n            firstName: '',\n            firstNameError:'',\n            email: '',\n            emailIdError: '',\n            mobileNumber: '',\n            mobileNumberError: '',\n            address_1: '',\n            address_1Error: '',\n            address_2: '',\n            city: '',\n            cityError: '',\n            state: '',\n            stateError: '',\n            pincode: '',\n            pincodeError: ''\n        }\n        this.handleChangeName = this.handleChangeName.bind(this);\n        this.editProfile = this.editProfile.bind(this);\n    }\n\n    /** Intailly call */\n    componentDidMount() {\n        /** Get Profile */\n        API.getProfile().\n            then((findresponse) => {\n                console.log(\"getProfile response===\", findresponse);\n                this.setState({ getProfileList: findresponse.data.data })\n                console.log(\"data==\", this.state.getProfileList);\n                this.setState({\n                    firstName: this.state.getProfileList.firstName,\n                    email: this.state.getProfileList.email,\n                    mobileNumber: this.state.getProfileList.mobileNumber,\n                    id: this.state.getProfileList.id\n                });\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n    }\n\n    /** Validation  */\n    validate = () => {\n        let emailIdError = \"\";\n        let mobileNumberError = \"\";\n        let firstNameError = \"\";\n\n        if (!this.state.firstName) {\n            firstNameError = \"please enter  name\";\n        }\n\n        const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        if (!reg.test(this.state.email)) {\n            emailIdError = \"invalid email\";\n        }\n\n        const phone = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n        if (!phone.test(this.state.mobileNumber)) {\n            mobileNumberError = \"please enter valid number\";\n        }\n\n        if (emailIdError || mobileNumberError || firstNameError) {\n            this.setState({ emailIdError, mobileNumberError, firstNameError });\n            return false;\n        }\n        return true;\n    };\n\n\n    /** \n * @param {JSON} event\n * handleChangeName\n */\n    handleChangeName(event) {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    /** Edit profile */\n    editProfile() {\n        const isValid = this.validate();\n        if (isValid) {\n            console.log(this.state);\n            this.setState({\n                emailIdError: '',\n                mobileNumberError: '',\n                firstNameError:''\n            })\n        };\n\n        if (this.state.name && this.state.email && this.state.mobileNumber && this.state.mobileNumber.length == 10) {\n            const obj = {\n                firstName: this.state.firstName,\n                emailId: this.state.email,\n                phoneNumber: this.state.mobileNumber\n            }\n            /** Update Profile */\n            API.updateProfile(obj).\n                then((findresponse) => {\n                    console.log(\"getProfile response===\", findresponse);\n                }).catch(\n                    { status: 500, message: 'Internal Server Error' }\n                );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Header />\n                {/** Profile && Edit profile form */}\n                <MDBContainer>\n                    <MDBRow>\n                        <MDBCol md=\"6\">\n                            <form>\n                                <label className=\"grey-text\">\n                                    Your name\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    name=\"firstName\"\n                                    value={this.state.firstName}\n                                    onChange={this.handleChangeName}\n                                    className=\"form-control\"\n                                />\n                                   <div style={{ fontSize: 12, color: \"red\" }}>\n                                {this.state.nameError}\n                            </div>\n                                <br />\n                                <label className=\"grey-text\">\n                                    Your email\n                                </label>\n                                <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    value={this.state.email}\n                                    onChange={this.handleChangeName}\n                                    className=\"form-control\"\n                                />\n                                   <div style={{ fontSize: 12, color: \"red\" }}>\n                                {this.state.nameError}\n                            </div>\n                                <br />\n                                <label\n                                    className=\"grey-text\"\n                                >\n                                    Phone Number\n                                </label>\n                                <input\n                                    type=\"number\"\n                                    name=\"mobileNumber\"\n                                    value={this.state.mobileNumber}\n                                    onChange={this.handleChangeName}\n                                    className=\"form-control\"\n                                />\n                                   <div style={{ fontSize: 12, color: \"red\" }}>\n                                {this.state.nameError}\n                            </div>\n                                <br />\n                                <div className=\"text-center mt-4\">\n                                    <MDBBtn color=\"unique\" onClick={this.editProfile} >\n                                        Save\n                                 </MDBBtn>\n                                    <div>\n                                        <span>\n                                            <p><Link to=\"/updatepassword\">update password</Link></p>\n                                        </span>\n                                    </div>\n                                </div>\n                            </form>\n                        </MDBCol>\n                    </MDBRow>\n                </MDBContainer>\n            </div>\n        );\n    }\n}\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}