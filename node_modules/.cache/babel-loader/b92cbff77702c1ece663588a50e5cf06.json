{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ecommerce-app/src/Component/orderdetail/orderdetail.js\";\nimport React from 'react';\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\nimport * as jsPDF from 'jspdf';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport * as html2canvas from 'html2canvas';\nimport './orderdetail.css';\n\nclass OrderDetail extends React.Component {\n  constructor(props) {\n    console.log(\"props\", props);\n    super(props);\n    this.state = {\n      orderDetailsList: [],\n      numPages: null\n    };\n    this.handlePdf = this.handlePdf.bind(this);\n    this.orderId = props.location.state.name;\n  }\n  /** Intailly Call */\n\n\n  componentDidMount() {\n    console.log(\"query=\", this.props.location.pathname.split('/')[2]);\n    const orderId = this.props.location.pathname.split('/')[2];\n    /** Get Orderdetails */\n\n    API.getOrderDetails(orderId).then(findresponse => {\n      console.log(\"getOrderHistory response===\", findresponse);\n      this.setState({\n        orderDetailsList: findresponse.data.data\n      });\n      console.log(\"data==\", this.state.orderDetailsList);\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n  /** Order pdf generate */\n\n\n  handlePdf() {\n    const input = document.getElementById('page');\n    html2canvas(input).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'px', 'a4');\n      const width = pdf.internal.pageSize.getWidth();\n      const height = pdf.internal.pageSize.getHeight();\n      pdf.addImage(imgData, 'JPEG', 0, 0, width, height);\n      pdf.save(\"myOrder.pdf\");\n    });\n  }\n\n  renderTableData() {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"id\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"name\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"age\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"email\"));\n  }\n\n  render() {\n    let displayData;\n    let displayProduct;\n    let totalamount;\n    /** Display Orderdetaillist Data */\n\n    if (this.state.orderDetailsList) displayData = this.state.orderDetailsList.map(data => React.createElement(MDBCardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, data.shippingAddress1, \" \", data.shippingAddress2), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Phone: \", data.telephone)));\n    if (this.state.orderDetailsList[0]) displayProduct = this.state.orderDetailsList[0].productList.map(data => React.createElement(MDBCardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/singleproduct/\".concat(data.productId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, data.name)), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-rupee-sign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), \" \", data.productDetail.price), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, data.quantity), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-rupee-sign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), \" \", data.total)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })));\n    if (this.state.orderDetailsList) totalamount = this.state.orderDetailsList.map(data => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Total Amount: \", React.createElement(\"i\", {\n      class: \"fas fa-rupee-sign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), \" \", data.total));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      id: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"OrderId:\"), \" \", this.orderId), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      style: {\n        width: \"22rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Shipping Adreess\"), displayData))), React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      style: {\n        width: \"22rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Billing Adreess\"), displayData)))), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"ItemList\"), React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Products\"), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Price\"), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Qty\"), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Total\"))), React.createElement(MDBCardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, displayProduct))))), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(MDBCol, {\n      md: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, totalamount))), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"unique\",\n      onClick: this.handlePdf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Download Invoice\"))));\n  }\n\n}\n\nexport default OrderDetail;","map":{"version":3,"sources":["/var/www/html/ecommerce-app/src/Component/orderdetail/orderdetail.js"],"names":["React","API","MDBContainer","MDBRow","MDBBtn","MDBCard","MDBCardBody","MDBCardImage","MDBCardTitle","MDBCardText","MDBCol","jsPDF","BrowserRouter","Router","Route","Link","html2canvas","OrderDetail","Component","constructor","props","console","log","state","orderDetailsList","numPages","handlePdf","bind","orderId","location","name","componentDidMount","pathname","split","getOrderDetails","then","findresponse","setState","data","catch","status","message","input","document","getElementById","canvas","imgData","toDataURL","pdf","width","internal","pageSize","getWidth","height","getHeight","addImage","save","renderTableData","render","displayData","displayProduct","totalamount","map","shippingAddress1","shippingAddress2","telephone","productList","productId","productDetail","price","quantity","total"],"mappings":"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","sourcesContent":["import React from 'react';\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\nimport * as jsPDF from 'jspdf';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport * as html2canvas from 'html2canvas';\nimport './orderdetail.css';\n\nclass OrderDetail extends React.Component {\n    constructor(props) {\n        console.log(\"props\", props);\n        super(props);\n        this.state = {\n            orderDetailsList: [],\n            numPages: null\n        }\n        this.handlePdf = this.handlePdf.bind(this);\n        this.orderId = props.location.state.name;\n    }\n\n    /** Intailly Call */\n    componentDidMount() {\n        console.log(\"query=\", this.props.location.pathname.split('/')[2]);\n        const orderId = this.props.location.pathname.split('/')[2];\n        /** Get Orderdetails */\n        API.getOrderDetails(orderId).\n            then((findresponse) => {\n                console.log(\"getOrderHistory response===\", findresponse);\n                this.setState({ orderDetailsList: findresponse.data.data })\n                console.log(\"data==\", this.state.orderDetailsList);\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n    }\n\n    /** Order pdf generate */\n    handlePdf() {\n        const input = document.getElementById('page');\n        html2canvas(input)\n            .then((canvas) => {\n                const imgData = canvas.toDataURL('image/png');\n                const pdf = new jsPDF('p', 'px', 'a4');\n                const width = pdf.internal.pageSize.getWidth();\n                const height = pdf.internal.pageSize.getHeight();\n                pdf.addImage(imgData, 'JPEG', 0, 0, width, height);\n                pdf.save(\"myOrder.pdf\");\n            });\n    };\n\n    renderTableData() {\n       \n           return (\n              <tr>\n                 <td>id</td>\n                 <td>name</td>\n                 <td>age</td>\n                 <td>email</td>\n              </tr>\n           )\n    \n     }\n\n    render() {\n        let displayData;\n        let displayProduct;\n        let totalamount;\n\n        /** Display Orderdetaillist Data */\n\n        if (this.state.orderDetailsList) displayData = this.state.orderDetailsList.map(data =>\n            <MDBCardText>\n                <span>{data.shippingAddress1} {data.shippingAddress2}</span>\n                <p>Phone: {data.telephone}</p>\n            </MDBCardText>\n        )\n\n        if (this.state.orderDetailsList[0]) displayProduct = this.state.orderDetailsList[0].productList.map(data =>\n            <MDBCardText>\n                <MDBRow>\n                    <MDBCol md=\"3\"><Link to={`/singleproduct/${data.productId}`}>{data.name}</Link></MDBCol>\n                    <MDBCol md=\"3\"><i class=\"fas fa-rupee-sign\"></i> {data.productDetail.price}</MDBCol>\n                    <MDBCol md=\"3\">{data.quantity}</MDBCol>\n                    <MDBCol md=\"3\"><i class=\"fas fa-rupee-sign\"></i> {data.total}</MDBCol>\n                </MDBRow>\n                <br />\n            </MDBCardText>\n        )\n\n        if (this.state.orderDetailsList) totalamount = this.state.orderDetailsList.map(data =>\n            <p>Total Amount: <i class=\"fas fa-rupee-sign\"></i> {data.total}</p>\n        )\n\n        return (\n            <div>\n                <MDBContainer id=\"page\">\n                    <h3><strong>OrderId:</strong> {this.orderId}</h3>\n                    <MDBRow>\n                        <MDBCol md=\"6\">\n                            <MDBCard style={{ width: \"22rem\" }}>\n                                <MDBCardBody>\n                                    <MDBCardTitle>Shipping Adreess</MDBCardTitle>\n                                    {displayData}\n\n                                </MDBCardBody>\n                            </MDBCard>\n                        </MDBCol>\n                        <MDBCol md=\"6\">\n                            <MDBCard style={{ width: \"22rem\" }}>\n                                <MDBCardBody>\n                                    <MDBCardTitle>Billing Adreess</MDBCardTitle>\n                                    {displayData}\n                                </MDBCardBody>\n                            </MDBCard>\n                        </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                        <MDBCol>\n                            <MDBCard>\n                                <h1>ItemList</h1>\n                                <MDBCardBody>\n                                    <MDBCardTitle>\n                                        <MDBRow>\n                                            <MDBCol md=\"3\">Products</MDBCol>\n                                            <MDBCol md=\"3\">Price</MDBCol>\n                                            <MDBCol md=\"3\">Qty</MDBCol>\n                                            <MDBCol md=\"3\">Total</MDBCol>\n                                        </MDBRow>\n                                    </MDBCardTitle>\n                                    <MDBCardText>\n                                        {displayProduct}\n                                    </MDBCardText>\n                                </MDBCardBody>\n                            </MDBCard>\n                        </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                        <MDBCol md=\"8\">\n                        </MDBCol>\n                        <MDBCol md=\"4\">\n                            <MDBCardTitle>\n                                {totalamount}\n                            </MDBCardTitle>\n                        </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                        <MDBBtn color=\"unique\" onClick={this.handlePdf} >Download Invoice</MDBBtn>\n                    </MDBRow>\n                </MDBContainer>\n            </div>\n        );\n    }\n}\n\nexport default OrderDetail;\n"]},"metadata":{},"sourceType":"module"}