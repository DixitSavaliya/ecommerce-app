{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ecommerce-app/src/Component/orderdetail/orderdetail.js\";\nimport React from 'react';\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Document, Page } from 'react-pdf';\nimport * as jsPDF from 'jspdf';\nimport * as html2canvas from 'html2canvas';\nimport './orderdetail.css';\n\nclass OrderDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderDetailsList: [],\n      numPages: null\n    };\n    this.handlePdf = this.handlePdf.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"query=\", this.props.location.pathname.split('/')[2]);\n    const orderId = this.props.location.pathname.split('/')[2];\n    API.getOrderDetails(orderId).then(findresponse => {\n      console.log(\"getOrderHistory response===\", findresponse);\n      this.setState({\n        orderDetailsList: findresponse.data.data\n      });\n      console.log(\"data==\", this.state.orderDetailsList);\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n\n  handlePdf() {\n    const input = document.getElementById('page');\n    html2canvas(input).then(canvas => {\n      const pdf = new jsPDF('p', 'px', 'a4');\n      var width = pdf.internal.pageSize.getWidth();\n      var height = pdf.internal.pageSize.getHeight();\n      pdf.addImage('JPEG', 0, 0, width, height);\n      pdf.save(\"myOrder.pdf\");\n    });\n  }\n\n  render() {\n    let displayData;\n    let displayProduct;\n    let totalamount;\n    if (this.state.orderDetailsList) displayData = this.state.orderDetailsList.map(data => React.createElement(MDBCardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, data.shippingAddress1, \" \", data.shippingAddress2), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Phone: \", data.telephone)));\n    if (this.state.orderDetailsList[0]) displayProduct = this.state.orderDetailsList[0].productList.map(data => React.createElement(MDBCardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, data.name), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-rupee-sign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), \" \", data.productDetail.price), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, data.quantity), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-rupee-sign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), \" \", data.total)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })));\n    if (this.state.orderDetailsList) totalamount = this.state.orderDetailsList.map(data => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Total Amount:\", data.total));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      id: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      style: {\n        width: \"22rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Shipping Adreess\"), displayData))), React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      style: {\n        width: \"22rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Billing Adreess\"), displayData)))), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"ItemList\"), React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Products\"), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Price\"), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Qty\"), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Total\"))), React.createElement(MDBCardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, displayProduct))))), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(MDBCol, {\n      md: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, totalamount))), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"unique\",\n      onClick: this.handlePdf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Download Invoice\"))));\n  }\n\n}\n\nexport default OrderDetail;","map":{"version":3,"sources":["/var/www/html/ecommerce-app/src/Component/orderdetail/orderdetail.js"],"names":["React","API","MDBContainer","MDBRow","MDBBtn","MDBCard","MDBCardBody","MDBCardImage","MDBCardTitle","MDBCardText","MDBCol","BrowserRouter","Router","Route","Link","Document","Page","jsPDF","html2canvas","OrderDetail","Component","constructor","props","state","orderDetailsList","numPages","handlePdf","bind","componentDidMount","console","log","location","pathname","split","orderId","getOrderDetails","then","findresponse","setState","data","catch","status","message","input","document","getElementById","canvas","pdf","width","internal","pageSize","getWidth","height","getHeight","addImage","save","render","displayData","displayProduct","totalamount","map","shippingAddress1","shippingAddress2","telephone","productList","name","productDetail","price","quantity","total"],"mappings":"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","sourcesContent":["import React from 'react';\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Document, Page } from 'react-pdf';\nimport * as jsPDF from 'jspdf';\nimport * as html2canvas from 'html2canvas';\nimport './orderdetail.css';\n\nclass OrderDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            orderDetailsList: [],\n            numPages: null\n        }\n        this.handlePdf = this.handlePdf.bind(this);\n    }\n\n\n    componentDidMount() {\n        console.log(\"query=\", this.props.location.pathname.split('/')[2]);\n        const orderId = this.props.location.pathname.split('/')[2];\n        API.getOrderDetails(orderId).\n            then((findresponse) => {\n                console.log(\"getOrderHistory response===\", findresponse);\n                this.setState({ orderDetailsList: findresponse.data.data })\n                console.log(\"data==\", this.state.orderDetailsList);\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n\n    }\n\n    handlePdf() {\n        const input = document.getElementById('page');\n        html2canvas(input)\n            .then((canvas) => {\n                const pdf = new jsPDF('p', 'px', 'a4');\n                var width = pdf.internal.pageSize.getWidth();\n                var height = pdf.internal.pageSize.getHeight();\n    \n                pdf.addImage('JPEG', 0, 0, width, height);\n                pdf.save(\"myOrder.pdf\");\n            });\n    };\n\n    render() {\n        let displayData;\n        let displayProduct;\n        let totalamount;\n\n        if (this.state.orderDetailsList) displayData = this.state.orderDetailsList.map(data =>\n            <MDBCardText>\n                <span>{data.shippingAddress1} {data.shippingAddress2}</span>\n                <p>Phone: {data.telephone}</p>\n            </MDBCardText>\n\n        )\n\n        if (this.state.orderDetailsList[0]) displayProduct = this.state.orderDetailsList[0].productList.map(data =>\n            <MDBCardText>\n                <MDBRow>\n                    <MDBCol md=\"3\">{data.name}</MDBCol>\n                    <MDBCol md=\"3\"><i class=\"fas fa-rupee-sign\"></i> {data.productDetail.price}</MDBCol>\n                    <MDBCol md=\"3\">{data.quantity}</MDBCol>\n                    <MDBCol md=\"3\"><i class=\"fas fa-rupee-sign\"></i> {data.total}</MDBCol>\n                </MDBRow>\n                <br />\n            </MDBCardText>\n        )\n\n        if (this.state.orderDetailsList) totalamount = this.state.orderDetailsList.map(data =>\n            <p>Total Amount:{data.total}</p>\n        )\n\n        return (\n            <div>\n                <MDBContainer id=\"page\">\n                    <MDBRow>\n                        <MDBCol md=\"6\">\n                            <MDBCard style={{ width: \"22rem\" }}>\n                                <MDBCardBody>\n                                    <MDBCardTitle>Shipping Adreess</MDBCardTitle>\n                                    {displayData}\n\n                                </MDBCardBody>\n                            </MDBCard>\n                        </MDBCol>\n                        <MDBCol md=\"6\">\n                            <MDBCard style={{ width: \"22rem\" }}>\n                                <MDBCardBody>\n                                    <MDBCardTitle>Billing Adreess</MDBCardTitle>\n                                    {displayData}\n\n                                </MDBCardBody>\n                            </MDBCard>\n                        </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                        <MDBCol>\n\n                            <MDBCard>\n                                <h1>ItemList</h1>\n                                <MDBCardBody>\n                                    <MDBCardTitle>\n                                        <MDBRow>\n                                            <MDBCol md=\"3\">Products</MDBCol>\n                                            <MDBCol md=\"3\">Price</MDBCol>\n                                            <MDBCol md=\"3\">Qty</MDBCol>\n                                            <MDBCol md=\"3\">Total</MDBCol>\n                                        </MDBRow>\n                                    </MDBCardTitle>\n                                    <MDBCardText>\n                                        {displayProduct}\n                                    </MDBCardText>\n                                </MDBCardBody>\n                            </MDBCard>\n                        </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                        <MDBCol md=\"8\">\n                        </MDBCol>\n                        <MDBCol md=\"4\">\n                            <MDBCardTitle>\n                                {totalamount}\n                            </MDBCardTitle>\n                        </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                        <MDBBtn color=\"unique\" onClick={this.handlePdf} >Download Invoice</MDBBtn>\n                    </MDBRow>\n                </MDBContainer>\n            </div>\n        );\n    }\n}\n\nexport default OrderDetail;\n"]},"metadata":{},"sourceType":"module"}