{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ecommerce-app/src/Component/orderdetail/orderdetail.js\";\nimport React from 'react';\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\nimport * as jsPDF from 'jspdf';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Header from '../home/header/header';\nimport * as html2canvas from 'html2canvas';\nimport './orderdetail.css';\n\nclass OrderDetail extends React.Component {\n  constructor(props) {\n    console.log(\"props\", props);\n    super(props);\n    this.state = {\n      orderDetailsList: [],\n      numPages: null,\n      orderId: ''\n    };\n    this.handlePdf = this.handlePdf.bind(this);\n    this.setState({\n      orderId: props.location.state.name\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"query=\", this.props.location.pathname.split('/')[2]);\n    const orderId = this.props.location.pathname.split('/')[2];\n    API.getOrderDetails(orderId).then(findresponse => {\n      console.log(\"getOrderHistory response===\", findresponse);\n      this.setState({\n        orderDetailsList: findresponse.data.data\n      });\n      console.log(\"data==\", this.state.orderDetailsList);\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n  /** Order pdf generate */\n\n\n  handlePdf() {\n    const input = document.getElementById('page');\n    html2canvas(input).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'px', 'a4');\n      const width = pdf.internal.pageSize.getWidth();\n      const height = pdf.internal.pageSize.getHeight();\n      pdf.addImage(imgData, 'JPEG', 0, 0, width, height);\n      pdf.save(\"myOrder.pdf\");\n    });\n  }\n\n  render() {\n    let displayData;\n    let displayProduct;\n    let totalamount;\n    if (this.state.orderDetailsList) displayData = this.state.orderDetailsList.map(data => React.createElement(MDBCardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, data.shippingAddress1, \" \", data.shippingAddress2), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Phone: \", data.telephone)));\n    if (this.state.orderDetailsList[0]) displayProduct = this.state.orderDetailsList[0].productList.map(data => React.createElement(MDBCardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/singleproduct/\".concat(data.productId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, data.name)), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-rupee-sign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), \" \", data.productDetail.price), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, data.quantity), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fas fa-rupee-sign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), \" \", data.total)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })));\n    if (this.state.orderDetailsList) totalamount = this.state.orderDetailsList.map(data => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Total Amount: \", React.createElement(\"i\", {\n      class: \"fas fa-rupee-sign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), \" \", data.total));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(MDBContainer, {\n      id: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"OrderId: \", this.state.orderId), React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      style: {\n        width: \"22rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Shipping Adreess\"), displayData))), React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      style: {\n        width: \"22rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Billing Adreess\"), displayData)))), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"ItemList\"), React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Products\"), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Price\"), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Qty\"), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Total\"))), React.createElement(MDBCardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, displayProduct))))), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(MDBCol, {\n      md: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, totalamount))), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"unique\",\n      onClick: this.handlePdf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Download Invoice\"))));\n  }\n\n}\n\nexport default OrderDetail;","map":{"version":3,"sources":["/var/www/html/ecommerce-app/src/Component/orderdetail/orderdetail.js"],"names":["React","API","MDBContainer","MDBRow","MDBBtn","MDBCard","MDBCardBody","MDBCardImage","MDBCardTitle","MDBCardText","MDBCol","jsPDF","BrowserRouter","Router","Route","Link","Header","html2canvas","OrderDetail","Component","constructor","props","console","log","state","orderDetailsList","numPages","orderId","handlePdf","bind","setState","location","name","componentDidMount","pathname","split","getOrderDetails","then","findresponse","data","catch","status","message","input","document","getElementById","canvas","imgData","toDataURL","pdf","width","internal","pageSize","getWidth","height","getHeight","addImage","save","render","displayData","displayProduct","totalamount","map","shippingAddress1","shippingAddress2","telephone","productList","productId","productDetail","price","quantity","total"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,2BAAhB;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,OAAvC,EAAgDC,WAAhD,EAA6DC,YAA7D,EAA2EC,YAA3E,EAAyFC,WAAzF,EAAsGC,MAAtG,QAAoH,UAApH;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAO,KAAKC,WAAZ,MAA6B,aAA7B;AACA,OAAO,mBAAP;;AAEA,MAAMC,WAAN,SAA0BlB,KAAK,CAACmB,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,KAApB;AACA,UAAMA,KAAN;AACA,SAAKG,KAAL,GAAa;AACTC,MAAAA,gBAAgB,EAAE,EADT;AAETC,MAAAA,QAAQ,EAAE,IAFD;AAGTC,MAAAA,OAAO,EAAC;AAHC,KAAb;AAKA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,QAAL,CAAc;AACVH,MAAAA,OAAO,EAACN,KAAK,CAACU,QAAN,CAAeP,KAAf,CAAqBQ;AADnB,KAAd;AAGH;;AAGDC,EAAAA,iBAAiB,GAAG;AAChBX,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKF,KAAL,CAAWU,QAAX,CAAoBG,QAApB,CAA6BC,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAAtB;AACA,UAAMR,OAAO,GAAG,KAAKN,KAAL,CAAWU,QAAX,CAAoBG,QAApB,CAA6BC,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAAhB;AACAlC,IAAAA,GAAG,CAACmC,eAAJ,CAAoBT,OAApB,EACIU,IADJ,CACUC,YAAD,IAAkB;AACnBhB,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2Ce,YAA3C;AACA,WAAKR,QAAL,CAAc;AAAEL,QAAAA,gBAAgB,EAAEa,YAAY,CAACC,IAAb,CAAkBA;AAAtC,OAAd;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKC,KAAL,CAAWC,gBAAjC;AACH,KALL,EAKOe,KALP,CAMQ;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KANR;AASH;AAED;;;AACAd,EAAAA,SAAS,GAAG;AACR,UAAMe,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAd;AACA5B,IAAAA,WAAW,CAAC0B,KAAD,CAAX,CACKN,IADL,CACWS,MAAD,IAAY;AACd,YAAMC,OAAO,GAAGD,MAAM,CAACE,SAAP,CAAiB,WAAjB,CAAhB;AACA,YAAMC,GAAG,GAAG,IAAItC,KAAJ,CAAU,GAAV,EAAe,IAAf,EAAqB,IAArB,CAAZ;AACA,YAAMuC,KAAK,GAAGD,GAAG,CAACE,QAAJ,CAAaC,QAAb,CAAsBC,QAAtB,EAAd;AACA,YAAMC,MAAM,GAAGL,GAAG,CAACE,QAAJ,CAAaC,QAAb,CAAsBG,SAAtB,EAAf;AACAN,MAAAA,GAAG,CAACO,QAAJ,CAAaT,OAAb,EAAsB,MAAtB,EAA8B,CAA9B,EAAiC,CAAjC,EAAoCG,KAApC,EAA2CI,MAA3C;AACAL,MAAAA,GAAG,CAACQ,IAAJ,CAAS,aAAT;AACH,KARL;AASH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,WAAJ;AACA,QAAIC,cAAJ;AACA,QAAIC,WAAJ;AAEA,QAAI,KAAKrC,KAAL,CAAWC,gBAAf,EAAiCkC,WAAW,GAAG,KAAKnC,KAAL,CAAWC,gBAAX,CAA4BqC,GAA5B,CAAgCvB,IAAI,IAC/E,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,IAAI,CAACwB,gBAAZ,OAA+BxB,IAAI,CAACyB,gBAApC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWzB,IAAI,CAAC0B,SAAhB,CAFJ,CAD2C,CAAd;AAOjC,QAAI,KAAKzC,KAAL,CAAWC,gBAAX,CAA4B,CAA5B,CAAJ,EAAoCmC,cAAc,GAAG,KAAKpC,KAAL,CAAWC,gBAAX,CAA4B,CAA5B,EAA+ByC,WAA/B,CAA2CJ,GAA3C,CAA+CvB,IAAI,IACpG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAe,oBAAC,IAAD;AAAM,MAAA,EAAE,2BAAoBA,IAAI,CAAC4B,SAAzB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+C5B,IAAI,CAACP,IAApD,CAAf,CADJ,EAEI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAe;AAAG,MAAA,KAAK,EAAC,mBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf,OAAkDO,IAAI,CAAC6B,aAAL,CAAmBC,KAArE,CAFJ,EAGI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgB9B,IAAI,CAAC+B,QAArB,CAHJ,EAII,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAe;AAAG,MAAA,KAAK,EAAC,mBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf,OAAkD/B,IAAI,CAACgC,KAAvD,CAJJ,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADiD,CAAjB;AAYpC,QAAI,KAAK/C,KAAL,CAAWC,gBAAf,EAAiCoC,WAAW,GAAG,KAAKrC,KAAL,CAAWC,gBAAX,CAA4BqC,GAA5B,CAAgCvB,IAAI,IAC/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAiB;AAAG,MAAA,KAAK,EAAC,mBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB,OAAoDA,IAAI,CAACgC,KAAzD,CAD2C,CAAd;AAIjC,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAc,KAAK/C,KAAL,CAAWG,OAAzB,CADJ,EAEI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEuB,QAAAA,KAAK,EAAE;AAAT,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEKS,WAFL,CADJ,CADJ,CAFJ,EAWI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAET,QAAAA,KAAK,EAAE;AAAT,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEKS,WAFL,CADJ,CADJ,CAXJ,CADJ,EAqBI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,EAGI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,EAII,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,CADJ,CADJ,EASI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,cADL,CATJ,CAFJ,CADJ,CADJ,CArBJ,EAyCI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,WADH,CADJ,CAHJ,CAzCJ,EAkDI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,OAAO,EAAE,KAAKjC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CAlDJ,CAFJ,CADJ;AA2DH;;AAnIqC;;AAsI1C,eAAeV,WAAf","sourcesContent":["import React from 'react';\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBBtn, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\nimport * as jsPDF from 'jspdf';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Header from '../home/header/header';\nimport * as html2canvas from 'html2canvas';\nimport './orderdetail.css';\n\nclass OrderDetail extends React.Component {\n    constructor(props) {\n        console.log(\"props\",props);\n        super(props);\n        this.state = {\n            orderDetailsList: [],\n            numPages: null,\n            orderId:''\n        }\n        this.handlePdf = this.handlePdf.bind(this);\n        this.setState({\n            orderId:props.location.state.name\n        })\n    }\n\n\n    componentDidMount() {\n        console.log(\"query=\", this.props.location.pathname.split('/')[2]);\n        const orderId = this.props.location.pathname.split('/')[2];\n        API.getOrderDetails(orderId).\n            then((findresponse) => {\n                console.log(\"getOrderHistory response===\", findresponse);\n                this.setState({ orderDetailsList: findresponse.data.data })\n                console.log(\"data==\", this.state.orderDetailsList);\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n\n    }\n\n    /** Order pdf generate */\n    handlePdf() {\n        const input = document.getElementById('page');\n        html2canvas(input)\n            .then((canvas) => {\n                const imgData = canvas.toDataURL('image/png');\n                const pdf = new jsPDF('p', 'px', 'a4');\n                const width = pdf.internal.pageSize.getWidth();\n                const height = pdf.internal.pageSize.getHeight();\n                pdf.addImage(imgData, 'JPEG', 0, 0, width, height);\n                pdf.save(\"myOrder.pdf\");\n            });\n    };\n\n    render() {\n        let displayData;\n        let displayProduct;\n        let totalamount;\n\n        if (this.state.orderDetailsList) displayData = this.state.orderDetailsList.map(data =>\n            <MDBCardText>\n                <span>{data.shippingAddress1} {data.shippingAddress2}</span>\n                <p>Phone: {data.telephone}</p>\n            </MDBCardText>\n        )\n\n        if (this.state.orderDetailsList[0]) displayProduct = this.state.orderDetailsList[0].productList.map(data =>\n            <MDBCardText>\n                <MDBRow>\n                    <MDBCol md=\"3\"><Link to={`/singleproduct/${data.productId}`}>{data.name}</Link></MDBCol>\n                    <MDBCol md=\"3\"><i class=\"fas fa-rupee-sign\"></i> {data.productDetail.price}</MDBCol>\n                    <MDBCol md=\"3\">{data.quantity}</MDBCol>\n                    <MDBCol md=\"3\"><i class=\"fas fa-rupee-sign\"></i> {data.total}</MDBCol>\n                </MDBRow>\n                <br />\n            </MDBCardText>\n        )\n\n        if (this.state.orderDetailsList) totalamount = this.state.orderDetailsList.map(data =>\n            <p>Total Amount: <i class=\"fas fa-rupee-sign\"></i> {data.total}</p>\n        )\n\n        return (\n            <div>\n                <Header/>\n                <MDBContainer id=\"page\">\n                    <MDBRow>\n                        <h1>OrderId: {this.state.orderId}</h1>\n                        <MDBCol md=\"6\">\n                            <MDBCard style={{ width: \"22rem\" }}>\n                                <MDBCardBody>\n                                    <MDBCardTitle>Shipping Adreess</MDBCardTitle>\n                                    {displayData}\n\n                                </MDBCardBody>\n                            </MDBCard>\n                        </MDBCol>\n                        <MDBCol md=\"6\">\n                            <MDBCard style={{ width: \"22rem\" }}>\n                                <MDBCardBody>\n                                    <MDBCardTitle>Billing Adreess</MDBCardTitle>\n                                    {displayData}\n                                </MDBCardBody>\n                            </MDBCard>\n                        </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                        <MDBCol>\n                            <MDBCard>\n                                <h1>ItemList</h1>\n                                <MDBCardBody>\n                                    <MDBCardTitle>\n                                        <MDBRow>\n                                            <MDBCol md=\"3\">Products</MDBCol>\n                                            <MDBCol md=\"3\">Price</MDBCol>\n                                            <MDBCol md=\"3\">Qty</MDBCol>\n                                            <MDBCol md=\"3\">Total</MDBCol>\n                                        </MDBRow>\n                                    </MDBCardTitle>\n                                    <MDBCardText>\n                                        {displayProduct}\n                                    </MDBCardText>\n                                </MDBCardBody>\n                            </MDBCard>\n                        </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                        <MDBCol md=\"8\">\n                        </MDBCol>\n                        <MDBCol md=\"4\">\n                            <MDBCardTitle>\n                              {totalamount}\n                            </MDBCardTitle>\n                        </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                        <MDBBtn color=\"unique\" onClick={this.handlePdf} >Download Invoice</MDBBtn>\n                    </MDBRow>\n                </MDBContainer>\n            </div>\n        );\n    }\n}\n\nexport default OrderDetail;\n"]},"metadata":{},"sourceType":"module"}