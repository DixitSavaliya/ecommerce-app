{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ecommerce-app/src/Component/orderdetail/orderdetail.js\";\nimport React from 'react';\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBBtn, MDBCard, MDBCardBody, MDBCardTitle, MDBCol } from 'mdbreact';\nimport * as jsPDF from 'jspdf';\nimport { Link } from \"react-router-dom\";\nimport * as html2canvas from 'html2canvas';\nimport './orderdetail.css';\nimport Header from '../../Component/home/header/header';\nimport Footer from '../../Component/home/footer/footer';\n\nclass OrderDetail extends React.Component {\n  constructor(props) {\n    console.log(\"props\", props);\n    super(props);\n    this.state = {\n      orderDetailsList: [],\n      numPages: null\n    };\n    this.handlePdf = this.handlePdf.bind(this);\n    this.orderId = props.location.state.name;\n  }\n  /** Intailly Call */\n\n\n  componentDidMount() {\n    console.log(\"query=\", this.props.location.pathname.split('/')[2]);\n    const orderId = this.props.location.pathname.split('/')[2];\n    /** Get Orderdetails */\n\n    API.getOrderDetails(orderId).then(findresponse => {\n      console.log(\"getOrderHistory response===\", findresponse);\n      this.setState({\n        orderDetailsList: findresponse.data.data\n      });\n      console.log(\"data==\", this.state.orderDetailsList);\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n  /** Order pdf generate */\n\n\n  handlePdf() {\n    const input = document.getElementById('page');\n    html2canvas(input).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF('p', 'px', 'a4');\n      const width = pdf.internal.pageSize.getWidth();\n      const height = pdf.internal.pageSize.getHeight();\n      pdf.addImage(imgData, 'JPEG', 0, 0, height, width);\n      pdf.save(\"myOrder.pdf\");\n    });\n  }\n\n  render() {\n    let displayData;\n    let displayProduct;\n    let totalamount;\n    let displayDate;\n    /** Display Orderdetaillist Data */\n\n    if (this.state.orderDetailsList) displayData = this.state.orderDetailsList.map((data, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, data.shippingAddress1, \" \", data.shippingAddress2), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Phone: \", data.telephone)));\n    if (this.state.orderDetailsList) displayDate = this.state.orderDetailsList.map((data, index) => React.createElement(\"h3\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Date:\"), \" \", data.createdDate));\n    if (this.state.orderDetailsList[0]) displayProduct = this.state.orderDetailsList[0].productList.map((data, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/singleproduct/\".concat(data.productId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, data.name)), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-rupee-sign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), \" \", data.productDetail.price), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, data.quantity), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-rupee-sign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), \" \", data.total)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })));\n    if (this.state.orderDetailsList) totalamount = this.state.orderDetailsList.map((data, index) => React.createElement(\"p\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Total Amount: \", React.createElement(\"i\", {\n      className: \"fas fa-rupee-sign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), \" \", data.total));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(MDBContainer, {\n      id: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"h4 text-center mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Order-Details\")), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"OrderId:\"), \" \", this.orderId)), React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, displayDate)), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      style: {\n        width: \"22rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Shipping Adreess\"), displayData))), React.createElement(MDBCol, {\n      md: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      style: {\n        width: \"22rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Billing Adreess\"), displayData)))), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"ItemList\"), React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Products\"), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Price\"), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Qty\"), React.createElement(MDBCol, {\n      md: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Total\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, displayProduct))))), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(MDBCol, {\n      md: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(MDBCardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, totalamount))), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"unique\",\n      onClick: this.handlePdf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Download Invoice\"))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default OrderDetail;","map":{"version":3,"sources":["/var/www/html/ecommerce-app/src/Component/orderdetail/orderdetail.js"],"names":["React","API","MDBContainer","MDBRow","MDBBtn","MDBCard","MDBCardBody","MDBCardTitle","MDBCol","jsPDF","Link","html2canvas","Header","Footer","OrderDetail","Component","constructor","props","console","log","state","orderDetailsList","numPages","handlePdf","bind","orderId","location","name","componentDidMount","pathname","split","getOrderDetails","then","findresponse","setState","data","catch","status","message","input","document","getElementById","canvas","imgData","toDataURL","pdf","width","internal","pageSize","getWidth","height","getHeight","addImage","save","render","displayData","displayProduct","totalamount","displayDate","map","index","shippingAddress1","shippingAddress2","telephone","createdDate","productList","productId","productDetail","price","quantity","total"],"mappings":"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","sourcesContent":["import React from 'react';\nimport API from '../../service/homeservice';\nimport { MDBContainer, MDBRow, MDBBtn, MDBCard, MDBCardBody,  MDBCardTitle,  MDBCol } from 'mdbreact';\nimport * as jsPDF from 'jspdf';\nimport { Link } from \"react-router-dom\";\nimport * as html2canvas from 'html2canvas';\nimport './orderdetail.css';\nimport Header from '../../Component/home/header/header';\nimport Footer from '../../Component/home/footer/footer';\n\nclass OrderDetail extends React.Component {\n    constructor(props) {\n        console.log(\"props\", props);\n        super(props);\n        this.state = {\n            orderDetailsList: [],\n            numPages: null\n        }\n        this.handlePdf = this.handlePdf.bind(this);\n        this.orderId = props.location.state.name;\n    }\n\n    /** Intailly Call */\n    componentDidMount() {\n        console.log(\"query=\", this.props.location.pathname.split('/')[2]);\n        const orderId = this.props.location.pathname.split('/')[2];\n        /** Get Orderdetails */\n        API.getOrderDetails(orderId)\n            .then((findresponse) => {\n                console.log(\"getOrderHistory response===\", findresponse);\n                this.setState({ orderDetailsList: findresponse.data.data })\n                console.log(\"data==\", this.state.orderDetailsList);\n            }).catch(\n                { status: 500, message: 'Internal Server Error' }\n            );\n    }\n\n    /** Order pdf generate */\n    handlePdf() {\n        const input = document.getElementById('page');\n        html2canvas(input)\n            .then((canvas) => {\n                const imgData = canvas.toDataURL('image/png');\n                const pdf = new jsPDF('p', 'px', 'a4');\n                const width = pdf.internal.pageSize.getWidth();\n                const height = pdf.internal.pageSize.getHeight();\n                pdf.addImage(imgData, 'JPEG', 0, 0, height, width);\n                pdf.save(\"myOrder.pdf\");\n            });\n    };\n\n    render() {\n        let displayData;\n        let displayProduct;\n        let totalamount;\n        let displayDate;\n\n        /** Display Orderdetaillist Data */\n\n        if (this.state.orderDetailsList) displayData = this.state.orderDetailsList.map((data, index) =>\n            <div key={index}>\n                <span>{data.shippingAddress1} {data.shippingAddress2}</span>\n                <p>Phone: {data.telephone}</p>\n            </div>\n        )\n\n        if (this.state.orderDetailsList) displayDate = this.state.orderDetailsList.map((data, index) =>\n            <h3 key={index}><strong>Date:</strong> {data.createdDate}</h3>\n        )\n\n        if (this.state.orderDetailsList[0]) displayProduct = this.state.orderDetailsList[0].productList.map((data, index) =>\n            <div key={index}>\n                <MDBRow>\n                    <MDBCol md=\"3\"><Link to={`/singleproduct/${data.productId}`}>{data.name}</Link></MDBCol>\n                    <MDBCol md=\"3\"><i className=\"fas fa-rupee-sign\"></i> {data.productDetail.price}</MDBCol>\n                    <MDBCol md=\"3\">{data.quantity}</MDBCol>\n                    <MDBCol md=\"3\"><i className=\"fas fa-rupee-sign\"></i> {data.total}</MDBCol>\n                </MDBRow>\n                <br />\n            </div>\n        )\n\n        if (this.state.orderDetailsList) totalamount = this.state.orderDetailsList.map((data, index) =>\n            <p key={index}>Total Amount: <i className=\"fas fa-rupee-sign\"></i> {data.total}</p>\n        )\n\n        return (\n            <div>\n                <Header />\n                <MDBContainer id=\"page\">\n                    <MDBRow>\n                        <h1 className=\"h4 text-center mb-4\">Order-Details</h1>\n                    </MDBRow>\n                    <MDBRow>\n                    </MDBRow>\n                    <MDBRow>\n                        <MDBCol md=\"6\">\n                            <h3><strong>OrderId:</strong> {this.orderId}</h3>\n                        </MDBCol>\n                        <MDBCol md=\"6\">\n                            {displayDate}\n                        </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                        <MDBCol md=\"6\">\n                            <MDBCard style={{ width: \"22rem\" }}>\n                                <MDBCardBody>\n                                    <MDBCardTitle>Shipping Adreess</MDBCardTitle>\n                                    {displayData}\n\n                                </MDBCardBody>\n                            </MDBCard>\n                        </MDBCol>\n                        <MDBCol md=\"6\">\n                            <MDBCard style={{ width: \"22rem\" }}>\n                                <MDBCardBody>\n                                    <MDBCardTitle>Billing Adreess</MDBCardTitle>\n                                    {displayData}\n                                </MDBCardBody>\n                            </MDBCard>\n                        </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                        <MDBCol>\n                            <MDBCard>\n                                <h1 className=\"padding\">ItemList</h1>\n                                <MDBCardBody>\n                                    <MDBCardTitle>\n                                        <MDBRow>\n                                            <MDBCol md=\"3\">Products</MDBCol>\n                                            <MDBCol md=\"3\">Price</MDBCol>\n                                            <MDBCol md=\"3\">Qty</MDBCol>\n                                            <MDBCol md=\"3\">Total</MDBCol>\n                                        </MDBRow>\n                                    </MDBCardTitle>\n                                    <div>\n                                        {displayProduct}\n                                    </div>\n                                </MDBCardBody>\n                            </MDBCard>\n                        </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                        <MDBCol md=\"8\">\n                        </MDBCol>\n                        <MDBCol md=\"4\">\n                            <MDBCardTitle>\n                                {totalamount}\n                            </MDBCardTitle>\n                        </MDBCol>\n                    </MDBRow>\n                    <MDBRow>\n                        <MDBBtn color=\"unique\" onClick={this.handlePdf} >Download Invoice</MDBBtn>\n                    </MDBRow>\n                </MDBContainer>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default OrderDetail;\n"]},"metadata":{},"sourceType":"module"}