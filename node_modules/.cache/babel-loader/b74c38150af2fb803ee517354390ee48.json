{"ast":null,"code":"import axios from 'axios';\nimport { config } from '../config';\nexport default {\n  BannerList: () => {\n    console.log(\"msg\");\n    return axios.get(config.baseApiUrl + \"api/list/banner-list\").then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  ProductList: () => {\n    console.log(\"msg\");\n    return axios.get(config.baseApiUrl + \"api/product-store/featureproduct-list\").then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  Signup: obj => {\n    return axios.post(config.baseApiUrl + \"api/customer/register\", obj).then(response => {\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  Login: obj => {\n    return axios.post(config.baseApiUrl + \"api/customer/login\", obj).then(response => {\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  CategoryList: () => {\n    return axios.get(config.baseApiUrl + \"api/list/category-list\").then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  SubCategoryList: data => {\n    return axios.get(config.baseApiUrl + \"api/list/productlist\", {\n      params: {\n        categoryId: data\n      }\n    }).then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  productDetail: id => {\n    return axios.get(config.baseApiUrl + \"api/product-store/productdetail/\" + id).then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  addwishlist: obj => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': localStorage.getItem('token')\n    };\n    console.log(\"id======================{}\", obj);\n    return axios.post(config.baseApiUrl + 'api/customer/add-product-to-wishlist', obj, {\n      headers: headers\n    }).then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  getWishList: () => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': localStorage.getItem('token')\n    };\n    return axios.get(config.baseApiUrl + 'api/customer/wishlist-product-list', {\n      headers: headers\n    }).then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  deleteWishList: pid => {\n    console.log(\"id=====\", pid);\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': localStorage.getItem('token')\n    };\n    return axios.delete(config.baseApiUrl + 'api/customer/wishlist-product-delete/' + pid, {\n      headers: headers\n    }).then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  searchList: data => {\n    console.log(\"data===\", data);\n    return axios.get(config.baseApiUrl + 'api/list/productlist', {\n      params: {\n        keyword: data\n      }\n    }).then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  getProfile: () => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': localStorage.getItem('token')\n    };\n    return axios.get(config.baseApiUrl + 'api/customer/get-profile', {\n      headers: headers\n    }).then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  updateProfile: obj => {\n    console.log(\"object======\", obj);\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': localStorage.getItem('token')\n    };\n    return axios.post(config.baseApiUrl + 'api/customer/edit-profile', obj, {\n      headers: headers\n    }).then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  getCountryList: () => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': localStorage.getItem('token')\n    };\n    return axios.get(config.baseApiUrl + 'api/list/country-list', {\n      headers: headers\n    }).then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  getZoneList: () => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': localStorage.getItem('token')\n    };\n    return axios.get(config.baseApiUrl + 'api/list/zone-list', {\n      headers: headers\n    }).then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  checkoutListOrder: obj => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': localStorage.getItem('token')\n    };\n    return axios.post(config.baseApiUrl + 'api/orders/customer-checkout', obj, {\n      headers: headers\n    }).then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  ForgotPassword: obj => {\n    return axios.post(config.baseApiUrl + 'api/customer/forgot-password', obj).then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  UpdatePasswordUser: obj => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': localStorage.getItem('token')\n    };\n    return axios.post(config.baseApiUrl + \"api/customer/change-password\", obj, {\n      headers: headers\n    }).then(response => {\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  addAddress: obj => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': localStorage.getItem('token')\n    };\n    return axios.post(config.baseApiUrl + 'api/address/add-address', obj, {\n      headers: headers\n    }).then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  getAddress: id => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': localStorage.getItem('token')\n    };\n    return axios.get(config.baseApiUrl + 'api/address/get-address-list/' + id, {\n      headers: headers\n    }).then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  },\n  editProfile: (obj, id) => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': localStorage.getItem('token')\n    };\n    return axios.put(config.baseApiUrl + 'api/address/update-address/' + id, obj, {\n      headers: headers\n    }).then(response => {\n      console.log(\"response===\", response);\n      return response;\n    }).catch({\n      status: 500,\n      message: 'Internal Server Error'\n    });\n  }\n};","map":{"version":3,"sources":["/var/www/html/ecommerce-app/src/service/homeservice.js"],"names":["axios","config","BannerList","console","log","get","baseApiUrl","then","response","catch","status","message","ProductList","Signup","obj","post","Login","CategoryList","SubCategoryList","data","params","categoryId","productDetail","id","addwishlist","headers","localStorage","getItem","getWishList","deleteWishList","pid","delete","searchList","keyword","getProfile","updateProfile","getCountryList","getZoneList","checkoutListOrder","ForgotPassword","UpdatePasswordUser","addAddress","getAddress","editProfile","put"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { config } from '../config';\n\nexport default {\n    BannerList: () => {\n        console.log(\"msg\");\n        return axios.get(config.baseApiUrl + \"api/list/banner-list\")\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    ProductList: () => {\n        console.log(\"msg\");\n        return axios.get(config.baseApiUrl + \"api/product-store/featureproduct-list\")\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    Signup: (obj) => {\n        return axios.post(config.baseApiUrl + \"api/customer/register\", obj)\n            .then(response => {\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    Login: (obj) => {\n        return axios.post(config.baseApiUrl + \"api/customer/login\", obj)\n            .then(response => {\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    CategoryList: () => {\n        return axios.get(config.baseApiUrl + \"api/list/category-list\")\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    SubCategoryList: (data) => {\n        return axios.get(config.baseApiUrl + \"api/list/productlist\", {\n            params: {\n                categoryId: data\n            }\n        })\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    productDetail: (id) => {\n        return axios.get(config.baseApiUrl + \"api/product-store/productdetail/\" + id)\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    addwishlist: (obj) => {\n        const headers = {\n            'Content-Type': 'application/json',\n            'Authorization': localStorage.getItem('token')\n        }\n        console.log(\"id======================{}\", obj);\n        return axios.post(config.baseApiUrl + 'api/customer/add-product-to-wishlist', obj, {\n            headers: headers\n        })\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    getWishList: () => {\n        const headers = {\n            'Content-Type': 'application/json',\n            'Authorization': localStorage.getItem('token')\n        }\n        return axios.get(config.baseApiUrl + 'api/customer/wishlist-product-list', {\n            headers: headers\n        })\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    deleteWishList: (pid) => {\n        console.log(\"id=====\", pid);\n        const headers = {\n            'Content-Type': 'application/json',\n            'Authorization': localStorage.getItem('token')\n        }\n        return axios.delete(config.baseApiUrl + 'api/customer/wishlist-product-delete/' + pid, {\n            headers: headers\n        })\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    searchList: (data) => {\n        console.log(\"data===\", data);\n        return axios.get(config.baseApiUrl + 'api/list/productlist', {\n            params: {\n                keyword: data\n            }\n        })\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    getProfile: () => {\n        const headers = {\n            'Content-Type': 'application/json',\n            'Authorization': localStorage.getItem('token')\n        }\n        return axios.get(config.baseApiUrl + 'api/customer/get-profile', {\n            headers: headers\n        })\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    updateProfile: (obj) => {\n        console.log(\"object======\", obj);\n        const headers = {\n            'Content-Type': 'application/json',\n            'Authorization': localStorage.getItem('token')\n        }\n        return axios.post(config.baseApiUrl + 'api/customer/edit-profile', obj, {\n            headers: headers\n        })\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    getCountryList: () => {\n        const headers = {\n            'Content-Type': 'application/json',\n            'Authorization': localStorage.getItem('token')\n        }\n        return axios.get(config.baseApiUrl + 'api/list/country-list', {\n            headers: headers\n        })\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    getZoneList: () => {\n        const headers = {\n            'Content-Type': 'application/json',\n            'Authorization': localStorage.getItem('token')\n        }\n        return axios.get(config.baseApiUrl + 'api/list/zone-list', {\n            headers: headers\n        })\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    checkoutListOrder: (obj) => {\n        const headers = {\n            'Content-Type': 'application/json',\n            'Authorization': localStorage.getItem('token')\n        }\n        return axios.post(config.baseApiUrl + 'api/orders/customer-checkout', obj, {\n            headers: headers\n        })\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    ForgotPassword: (obj) => {\n        return axios.post(config.baseApiUrl + 'api/customer/forgot-password', obj)\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    UpdatePasswordUser: (obj) => {\n        const headers = {\n            'Content-Type': 'application/json',\n            'Authorization': localStorage.getItem('token')\n        }\n        return axios.post(config.baseApiUrl + \"api/customer/change-password\", obj, {\n            headers: headers\n        })\n            .then(response => {\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    addAddress: (obj) => {\n        const headers = {\n            'Content-Type': 'application/json',\n            'Authorization': localStorage.getItem('token')\n        }\n        return axios.post(config.baseApiUrl + 'api/address/add-address', obj, {\n            headers: headers\n        })\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    getAddress: (id) => {\n        const headers = {\n            'Content-Type': 'application/json',\n            'Authorization': localStorage.getItem('token')\n        }\n        return axios.get(config.baseApiUrl + 'api/address/get-address-list/' + id, {\n            headers: headers\n        })\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    },\n\n    editProfile: (obj,id) => {\n        const headers = {\n            'Content-Type': 'application/json',\n            'Authorization': localStorage.getItem('token')\n        }\n        return axios.put(config.baseApiUrl + 'api/address/update-address/' + id ,obj, {\n            headers: headers\n        })\n            .then(response => {\n                console.log(\"response===\", response);\n                return response;\n            }).catch({ status: 500, message: 'Internal Server Error' });\n    }\n\n}"]},"metadata":{},"sourceType":"module"}